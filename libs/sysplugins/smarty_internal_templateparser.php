<?php

/**
 * Smarty Internal Plugin Templateparser
 * This is the template parser.
 * It is generated from the internal.templateparser.y file
 *
 * @package    Smarty
 * @subpackage Compiler
 * @author     Uwe Tews
 */
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;

#line 13 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 80 "smarty_internal_templateparser.php"
{
    #line 15 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public static $prefix_number = 0;
    private $_string;
    public $yymajor;
    public $last_index;
    public $last_variable;
    public $root_buffer;
    public $current_buffer;
    private $lex;
    private $internalError = false;
    private $strip = false;

    function __construct($lex, $compiler)
    {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public function insertPhpCode($code)
    {
        $this->current_buffer->append_subtree(new _smarty_tag($this, $code));
    }

    public function compileVariable($variable)
    {
        if (strpos($variable, '(') == 0) {
            // not a variable variable
            $var = trim($variable, '\'');
            $this->compiler->tag_nocache = $this->compiler->tag_nocache | $this->template->getVariable($var, null, true, false)->nocache;
            $this->template->properties['variables'][$var] = $this->compiler->tag_nocache | $this->compiler->nocache;
        }
        //       return '(isset($_smarty_tpl->tpl_vars['. $variable .'])?$_smarty_tpl->tpl_vars['. $variable .']->value:$_smarty_tpl->getVariable('. $variable .')->value)';
        return '$_smarty_tpl->tpl_vars[' . $variable . ']->value';
    }

    #line 134 "smarty_internal_templateparser.php"

    const TP_VERT = 1;
    const TP_COLON = 2;
    const TP_RDEL = 3;
    const TP_COMMENT = 4;
    const TP_PHPSTARTTAG = 5;
    const TP_PHPENDTAG = 6;
    const TP_PHPENDSCRIPT = 7;
    const TP_ASPSTARTTAG = 8;
    const TP_ASPENDTAG = 9;
    const TP_XMLTAG = 10;
    const TP_TEXT = 11;
    const TP_STRIPON = 12;
    const TP_STRIPOFF = 13;
    const TP_BLOCKSOURCE = 14;
    const TP_LITERALSTART = 15;
    const TP_LITERALEND = 16;
    const TP_LITERAL = 17;
    const TP_LDEL = 18;
    const TP_DOLLAR = 19;
    const TP_ID = 20;
    const TP_EQUAL = 21;
    const TP_PTR = 22;
    const TP_LDELIF = 23;
    const TP_LDELFOR = 24;
    const TP_SEMICOLON = 25;
    const TP_INCDEC = 26;
    const TP_TO = 27;
    const TP_STEP = 28;
    const TP_LDELFOREACH = 29;
    const TP_SPACE = 30;
    const TP_AS = 31;
    const TP_APTR = 32;
    const TP_LDELSETFILTER = 33;
    const TP_SMARTYBLOCKCHILDPARENT = 34;
    const TP_LDELSLASH = 35;
    const TP_ATTR = 36;
    const TP_INTEGER = 37;
    const TP_COMMA = 38;
    const TP_OPENP = 39;
    const TP_CLOSEP = 40;
    const TP_MATH = 41;
    const TP_UNIMATH = 42;
    const TP_ANDSYM = 43;
    const TP_ISIN = 44;
    const TP_ISDIVBY = 45;
    const TP_ISNOTDIVBY = 46;
    const TP_ISEVEN = 47;
    const TP_ISNOTEVEN = 48;
    const TP_ISEVENBY = 49;
    const TP_ISNOTEVENBY = 50;
    const TP_ISODD = 51;
    const TP_ISNOTODD = 52;
    const TP_ISODDBY = 53;
    const TP_ISNOTODDBY = 54;
    const TP_INSTANCEOF = 55;
    const TP_QMARK = 56;
    const TP_NOT = 57;
    const TP_TYPECAST = 58;
    const TP_HEX = 59;
    const TP_DOT = 60;
    const TP_SINGLEQUOTESTRING = 61;
    const TP_CONSTANT = 62;
    const TP_DOUBLECOLON = 63;
    const TP_NAMESPACE = 64;
    const TP_AT = 65;
    const TP_HATCH = 66;
    const TP_OPENB = 67;
    const TP_CLOSEB = 68;
    const TP_EQUALS = 69;
    const TP_NOTEQUALS = 70;
    const TP_GREATERTHAN = 71;
    const TP_LESSTHAN = 72;
    const TP_GREATEREQUAL = 73;
    const TP_LESSEQUAL = 74;
    const TP_IDENTITY = 75;
    const TP_NONEIDENTITY = 76;
    const TP_MOD = 77;
    const TP_LAND = 78;
    const TP_LOR = 79;
    const TP_LXOR = 80;
    const TP_QUOTE = 81;
    const TP_BACKTICK = 82;
    const TP_DOLLARID = 83;
    const YY_NO_ACTION = 572;
    const YY_ACCEPT_ACTION = 571;
    const YY_ERROR_ACTION = 570;

    const YY_SZ_ACTTAB = 2591;
    static public $yy_action = array(
        /*     0 */
        226, 128, 315, 199, 191, 271, 274, 276, 275, 296,
        /*    10 */
        295, 297, 298, 287, 289, 269, 197, 22, 19, 8,
        /*    20 */
        197, 347, 336, 201, 4, 108, 272, 259, 235, 40,
        /*    30 */
        122, 203, 203, 193, 255, 42, 254, 192, 311, 486,
        /*    40 */
        51, 49, 46, 44, 20, 25, 314, 316, 31, 30,
        /*    50 */
        305, 306, 29, 18, 226, 93, 571, 95, 280, 228,
        /*    60 */
        273, 203, 312, 486, 114, 24, 121, 283, 317, 337,
        /*    70 */
        323, 324, 322, 321, 319, 320, 325, 326, 331, 332,
        /*    80 */
        284, 34, 357, 40, 278, 226, 496, 431, 26, 42,
        /*    90 */
        310, 37, 21, 496, 51, 49, 46, 44, 20, 25,
        /*   100 */
        314, 316, 31, 30, 305, 306, 29, 18, 226, 277,
        /*   110 */
        226, 355, 425, 6, 431, 245, 26, 484, 310, 37,
        /*   120 */
        431, 241, 317, 337, 323, 324, 322, 321, 319, 320,
        /*   130 */
        325, 326, 331, 332, 272, 243, 40, 40, 260, 40,
        /*   140 */
        33, 484, 42, 42, 285, 42, 343, 486, 51, 49,
        /*   150 */
        46, 44, 20, 25, 314, 316, 31, 30, 305, 306,
        /*   160 */
        29, 18, 226, 93, 204, 106, 182, 38, 129, 187,
        /*   170 */
        5, 486, 26, 226, 310, 303, 317, 337, 323, 324,
        /*   180 */
        322, 321, 319, 320, 325, 326, 331, 332, 272, 104,
        /*   190 */
        177, 165, 226, 203, 388, 39, 26, 335, 310, 303,
        /*   200 */
        360, 486, 51, 49, 46, 44, 20, 25, 314, 316,
        /*   210 */
        31, 30, 305, 306, 29, 18, 226, 203, 226, 243,
        /*   220 */
        431, 40, 279, 228, 273, 486, 251, 42, 130, 327,
        /*   230 */
        317, 337, 323, 324, 322, 321, 319, 320, 325, 326,
        /*   240 */
        331, 332, 226, 234, 428, 27, 26, 431, 310, 14,
        /*   250 */
        198, 311, 484, 431, 288, 248, 51, 49, 46, 44,
        /*   260 */
        20, 25, 314, 316, 31, 30, 305, 306, 29, 18,
        /*   270 */
        226, 428, 211, 328, 184, 103, 484, 428, 313, 9,
        /*   280 */
        202, 311, 236, 303, 317, 337, 323, 324, 322, 321,
        /*   290 */
        319, 320, 325, 326, 331, 332, 309, 101, 171, 178,
        /*   300 */
        246, 226, 256, 249, 222, 130, 257, 303, 303, 485,
        /*   310 */
        51, 49, 46, 44, 20, 25, 314, 316, 31, 30,
        /*   320 */
        305, 306, 29, 18, 226, 203, 205, 39, 183, 266,
        /*   330 */
        40, 43, 484, 485, 136, 107, 42, 303, 317, 337,
        /*   340 */
        323, 324, 322, 321, 319, 320, 325, 326, 331, 332,
        /*   350 */
        272, 230, 103, 308, 135, 205, 484, 39, 196, 264,
        /*   360 */
        2, 105, 292, 486, 51, 49, 46, 44, 20, 25,
        /*   370 */
        314, 316, 31, 30, 305, 306, 29, 18, 226, 93,
        /*   380 */
        267, 162, 166, 26, 124, 310, 203, 486, 109, 361,
        /*   390 */
        303, 303, 317, 337, 323, 324, 322, 321, 319, 320,
        /*   400 */
        325, 326, 331, 332, 309, 352, 176, 240, 205, 226,
        /*   410 */
        45, 226, 26, 393, 229, 303, 15, 158, 51, 49,
        /*   420 */
        46, 44, 20, 25, 314, 316, 31, 30, 305, 306,
        /*   430 */
        29, 18, 226, 205, 161, 26, 181, 217, 309, 195,
        /*   440 */
        26, 3, 250, 303, 116, 226, 317, 337, 323, 324,
        /*   450 */
        322, 321, 319, 320, 325, 326, 331, 332, 143, 230,
        /*   460 */
        284, 226, 185, 12, 309, 312, 231, 203, 45, 42,
        /*   470 */
        43, 158, 51, 49, 46, 44, 20, 25, 314, 316,
        /*   480 */
        31, 30, 305, 306, 29, 18, 226, 163, 206, 341,
        /*   490 */
        158, 342, 17, 26, 359, 244, 303, 351, 132, 345,
        /*   500 */
        317, 337, 323, 324, 322, 321, 319, 320, 325, 326,
        /*   510 */
        331, 332, 143, 268, 284, 172, 256, 294, 179, 180,
        /*   520 */
        155, 194, 256, 258, 303, 157, 51, 49, 46, 44,
        /*   530 */
        20, 25, 314, 316, 31, 30, 305, 306, 29, 18,
        /*   540 */
        226, 284, 263, 200, 167, 123, 137, 134, 173, 290,
        /*   550 */
        307, 282, 126, 303, 317, 337, 323, 324, 322, 321,
        /*   560 */
        319, 320, 325, 326, 331, 332, 309, 309, 270, 145,
        /*   570 */
        291, 363, 142, 32, 281, 155, 344, 354, 94, 100,
        /*   580 */
        51, 49, 46, 44, 20, 25, 314, 316, 31, 30,
        /*   590 */
        305, 306, 29, 18, 226, 284, 13, 35, 186, 340,
        /*   600 */
        6, 346, 205, 241, 125, 112, 102, 303, 317, 337,
        /*   610 */
        323, 324, 322, 321, 319, 320, 325, 326, 331, 332,
        /*   620 */
        309, 284, 284, 207, 350, 168, 309, 313, 174, 262,
        /*   630 */
        11, 115, 348, 265, 51, 49, 46, 44, 20, 25,
        /*   640 */
        314, 316, 31, 30, 305, 306, 29, 18, 226, 36,
        /*   650 */
        293, 188, 334, 334, 239, 334, 334, 334, 334, 98,
        /*   660 */
        118, 190, 317, 337, 323, 324, 322, 321, 319, 320,
        /*   670 */
        325, 326, 331, 332, 144, 284, 284, 334, 334, 334,
        /*   680 */
        334, 334, 334, 334, 334, 334, 97, 334, 51, 49,
        /*   690 */
        46, 44, 20, 25, 314, 316, 31, 30, 305, 306,
        /*   700 */
        29, 18, 284, 334, 334, 334, 334, 334, 334, 334,
        /*   710 */
        41, 334, 334, 334, 334, 334, 317, 337, 323, 324,
        /*   720 */
        322, 321, 319, 320, 325, 326, 331, 332, 226, 473,
        /*   730 */
        334, 151, 334, 151, 334, 334, 334, 334, 232, 334,
        /*   740 */
        334, 334, 156, 318, 329, 247, 141, 158, 338, 251,
        /*   750 */
        338, 473, 189, 473, 473, 261, 473, 473, 215, 225,
        /*   760 */
        333, 300, 473, 338, 473, 484, 473, 334, 51, 49,
        /*   770 */
        46, 44, 20, 25, 314, 316, 31, 30, 305, 306,
        /*   780 */
        29, 18, 226, 334, 334, 211, 334, 334, 334, 484,
        /*   790 */
        334, 334, 9, 334, 473, 158, 317, 337, 323, 324,
        /*   800 */
        322, 321, 319, 320, 325, 326, 331, 332, 473, 334,
        /*   810 */
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        /*   820 */
        334, 334, 51, 49, 46, 44, 20, 25, 314, 316,
        /*   830 */
        31, 30, 305, 306, 29, 18, 143, 334, 334, 334,
        /*   840 */
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        /*   850 */
        317, 337, 323, 324, 322, 321, 319, 320, 325, 326,
        /*   860 */
        331, 332, 334, 334, 51, 49, 46, 44, 20, 25,
        /*   870 */
        314, 316, 31, 30, 305, 306, 29, 18, 334, 334,
        /*   880 */
        334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
        /*   890 */
        334, 334, 317, 337, 323, 324, 322, 321, 319, 320,
        /*   900 */
        325, 326, 331, 332, 334, 334, 429, 362, 334, 334,
        /*   910 */
        334, 8, 120, 213, 10, 334, 4, 108, 334, 4,
        /*   920 */
        108, 334, 122, 334, 233, 122, 255, 334, 254, 255,
        /*   930 */
        238, 254, 28, 429, 334, 47, 334, 334, 334, 429,
        /*   940 */
        334, 334, 484, 334, 26, 334, 310, 334, 334, 334,
        /*   950 */
        50, 48, 301, 252, 286, 299, 40, 218, 242, 103,
        /*   960 */
        1, 364, 42, 334, 334, 334, 484, 334, 334, 334,
        /*   970 */
        8, 133, 91, 334, 96, 4, 108, 356, 16, 358,
        /*   980 */
        334, 122, 334, 334, 334, 255, 334, 254, 334, 238,
        /*   990 */
        334, 28, 191, 169, 47, 334, 334, 334, 334, 334,
        /*  1000 */
        334, 334, 303, 334, 334, 22, 19, 334, 334, 50,
        /*  1010 */
        48, 301, 252, 286, 299, 334, 218, 334, 103, 1,
        /*  1020 */
        203, 334, 334, 334, 26, 362, 310, 334, 334, 8,
        /*  1030 */
        120, 227, 10, 96, 4, 108, 40, 4, 108, 334,
        /*  1040 */
        122, 334, 42, 122, 255, 334, 254, 255, 238, 254,
        /*  1050 */
        28, 334, 334, 47, 334, 334, 334, 334, 334, 232,
        /*  1060 */
        334, 334, 334, 150, 334, 334, 334, 141, 50, 48,
        /*  1070 */
        301, 252, 286, 299, 334, 218, 302, 103, 1, 215,
        /*  1080 */
        225, 333, 300, 334, 338, 334, 334, 334, 8, 120,
        /*  1090 */
        209, 334, 96, 4, 108, 353, 16, 358, 232, 122,
        /*  1100 */
        334, 334, 149, 255, 334, 254, 141, 223, 334, 28,
        /*  1110 */
        334, 334, 47, 334, 334, 334, 334, 334, 215, 225,
        /*  1120 */
        333, 300, 334, 338, 334, 334, 334, 50, 48, 301,
        /*  1130 */
        252, 286, 299, 334, 218, 334, 103, 1, 226, 334,
        /*  1140 */
        398, 334, 26, 334, 310, 334, 334, 8, 139, 227,
        /*  1150 */
        334, 96, 4, 108, 40, 334, 237, 232, 122, 253,
        /*  1160 */
        42, 147, 255, 334, 254, 141, 238, 40, 7, 334,
        /*  1170 */
        334, 47, 334, 42, 334, 334, 484, 215, 225, 333,
        /*  1180 */
        300, 334, 338, 334, 334, 334, 50, 48, 301, 252,
        /*  1190 */
        286, 299, 334, 218, 334, 103, 1, 334, 334, 334,
        /*  1200 */
        484, 334, 334, 334, 334, 334, 8, 120, 216, 334,
        /*  1210 */
        96, 4, 108, 334, 334, 334, 232, 122, 334, 334,
        /*  1220 */
        154, 255, 334, 254, 141, 238, 334, 28, 334, 334,
        /*  1230 */
        47, 334, 334, 334, 334, 334, 215, 225, 333, 300,
        /*  1240 */
        334, 338, 334, 334, 334, 50, 48, 301, 252, 286,
        /*  1250 */
        299, 334, 218, 334, 103, 1, 334, 334, 334, 334,
        /*  1260 */
        334, 334, 334, 334, 334, 8, 130, 227, 334, 96,
        /*  1270 */
        4, 108, 334, 334, 334, 232, 122, 334, 334, 153,
        /*  1280 */
        255, 334, 254, 141, 238, 334, 23, 334, 334, 47,
        /*  1290 */
        334, 334, 334, 334, 334, 215, 225, 333, 300, 334,
        /*  1300 */
        338, 334, 334, 334, 50, 48, 301, 252, 286, 299,
        /*  1310 */
        334, 218, 334, 103, 1, 334, 334, 334, 334, 334,
        /*  1320 */
        334, 334, 334, 334, 8, 140, 227, 334, 96, 4,
        /*  1330 */
        108, 334, 334, 334, 232, 122, 334, 334, 146, 255,
        /*  1340 */
        334, 254, 141, 238, 334, 28, 334, 334, 47, 334,
        /*  1350 */
        334, 334, 334, 334, 215, 225, 333, 300, 334, 338,
        /*  1360 */
        334, 334, 334, 50, 48, 301, 252, 286, 299, 334,
        /*  1370 */
        218, 334, 103, 1, 334, 334, 334, 334, 334, 334,
        /*  1380 */
        334, 334, 334, 8, 120, 208, 334, 96, 4, 108,
        /*  1390 */
        334, 334, 334, 232, 122, 334, 334, 148, 255, 334,
        /*  1400 */
        254, 141, 238, 334, 28, 334, 334, 47, 334, 334,
        /*  1410 */
        334, 334, 334, 215, 225, 333, 300, 334, 338, 334,
        /*  1420 */
        334, 334, 50, 48, 301, 252, 286, 299, 334, 218,
        /*  1430 */
        334, 103, 1, 334, 334, 334, 334, 334, 334, 334,
        /*  1440 */
        334, 334, 8, 130, 227, 334, 96, 4, 108, 334,
        /*  1450 */
        334, 334, 334, 122, 334, 334, 334, 255, 334, 254,
        /*  1460 */
        334, 238, 334, 23, 191, 159, 47, 334, 334, 334,
        /*  1470 */
        334, 334, 334, 334, 303, 334, 334, 22, 19, 334,
        /*  1480 */
        334, 50, 48, 301, 252, 286, 299, 232, 218, 334,
        /*  1490 */
        103, 131, 203, 334, 79, 141, 334, 334, 334, 334,
        /*  1500 */
        334, 334, 334, 304, 330, 96, 334, 214, 225, 333,
        /*  1510 */
        300, 232, 338, 334, 334, 131, 334, 334, 79, 141,
        /*  1520 */
        334, 334, 224, 339, 334, 334, 334, 304, 330, 334,
        /*  1530 */
        334, 214, 225, 333, 300, 232, 338, 334, 334, 152,
        /*  1540 */
        334, 334, 66, 117, 258, 334, 232, 349, 334, 334,
        /*  1550 */
        152, 304, 330, 87, 141, 214, 225, 333, 300, 334,
        /*  1560 */
        338, 334, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  1570 */
        232, 338, 334, 334, 152, 334, 334, 56, 117, 138,
        /*  1580 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  1590 */
        214, 225, 333, 300, 232, 338, 334, 334, 152, 334,
        /*  1600 */
        334, 70, 141, 334, 334, 334, 334, 334, 334, 334,
        /*  1610 */
        304, 330, 334, 334, 214, 225, 333, 300, 334, 338,
        /*  1620 */
        232, 191, 164, 334, 152, 334, 221, 70, 141, 334,
        /*  1630 */
        334, 303, 334, 334, 22, 19, 304, 330, 334, 334,
        /*  1640 */
        214, 225, 333, 300, 334, 338, 232, 334, 334, 203,
        /*  1650 */
        152, 334, 220, 70, 141, 334, 334, 334, 334, 334,
        /*  1660 */
        191, 175, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  1670 */
        303, 338, 334, 22, 19, 232, 334, 334, 219, 152,
        /*  1680 */
        334, 334, 89, 141, 334, 334, 334, 334, 203, 334,
        /*  1690 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 232,
        /*  1700 */
        338, 334, 334, 152, 334, 334, 64, 141, 334, 334,
        /*  1710 */
        334, 334, 334, 334, 334, 304, 330, 334, 334, 210,
        /*  1720 */
        225, 333, 300, 334, 338, 232, 334, 334, 334, 110,
        /*  1730 */
        334, 334, 68, 141, 334, 334, 334, 334, 334, 334,
        /*  1740 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 334,
        /*  1750 */
        338, 232, 334, 334, 334, 152, 334, 334, 63, 141,
        /*  1760 */
        334, 334, 334, 334, 334, 99, 160, 304, 330, 334,
        /*  1770 */
        334, 214, 225, 333, 300, 303, 338, 334, 22, 19,
        /*  1780 */
        232, 334, 334, 334, 152, 334, 334, 57, 141, 334,
        /*  1790 */
        334, 334, 334, 203, 334, 334, 304, 330, 334, 334,
        /*  1800 */
        214, 225, 333, 300, 232, 338, 334, 334, 92, 334,
        /*  1810 */
        334, 52, 119, 334, 334, 334, 334, 334, 334, 334,
        /*  1820 */
        304, 330, 334, 334, 212, 225, 333, 300, 334, 338,
        /*  1830 */
        232, 334, 334, 334, 152, 334, 334, 88, 141, 334,
        /*  1840 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  1850 */
        214, 225, 333, 300, 334, 338, 232, 334, 334, 334,
        /*  1860 */
        152, 334, 334, 82, 141, 334, 334, 334, 334, 334,
        /*  1870 */
        191, 170, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  1880 */
        303, 338, 334, 22, 19, 232, 334, 334, 334, 152,
        /*  1890 */
        334, 334, 78, 141, 334, 334, 334, 334, 203, 334,
        /*  1900 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 232,
        /*  1910 */
        338, 334, 334, 152, 334, 334, 67, 141, 334, 334,
        /*  1920 */
        334, 334, 334, 334, 334, 304, 330, 334, 334, 214,
        /*  1930 */
        225, 333, 300, 334, 338, 232, 334, 334, 334, 152,
        /*  1940 */
        334, 334, 66, 141, 334, 334, 334, 334, 334, 334,
        /*  1950 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 334,
        /*  1960 */
        338, 232, 334, 334, 334, 152, 334, 334, 76, 141,
        /*  1970 */
        334, 334, 334, 334, 334, 334, 334, 304, 330, 334,
        /*  1980 */
        334, 214, 225, 333, 300, 334, 338, 334, 334, 334,
        /*  1990 */
        232, 334, 334, 334, 152, 334, 334, 81, 141, 334,
        /*  2000 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2010 */
        214, 225, 333, 300, 232, 338, 334, 334, 152, 334,
        /*  2020 */
        334, 80, 141, 334, 334, 334, 334, 334, 334, 334,
        /*  2030 */
        304, 330, 334, 334, 214, 225, 333, 300, 334, 338,
        /*  2040 */
        232, 334, 334, 334, 152, 334, 334, 84, 141, 334,
        /*  2050 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2060 */
        214, 225, 333, 300, 334, 338, 232, 334, 334, 334,
        /*  2070 */
        152, 334, 334, 69, 141, 334, 334, 334, 334, 334,
        /*  2080 */
        334, 334, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  2090 */
        334, 338, 334, 334, 334, 232, 334, 334, 334, 152,
        /*  2100 */
        334, 334, 83, 141, 334, 334, 334, 334, 334, 334,
        /*  2110 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 232,
        /*  2120 */
        338, 334, 334, 152, 334, 334, 86, 141, 334, 334,
        /*  2130 */
        334, 334, 334, 334, 334, 304, 330, 334, 334, 214,
        /*  2140 */
        225, 333, 300, 334, 338, 232, 334, 334, 334, 152,
        /*  2150 */
        334, 334, 59, 141, 334, 334, 334, 334, 334, 334,
        /*  2160 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 334,
        /*  2170 */
        338, 232, 334, 334, 334, 152, 334, 334, 72, 141,
        /*  2180 */
        334, 334, 334, 334, 334, 334, 334, 304, 330, 334,
        /*  2190 */
        334, 214, 225, 333, 300, 334, 338, 334, 334, 334,
        /*  2200 */
        232, 334, 334, 334, 152, 334, 334, 61, 141, 334,
        /*  2210 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2220 */
        214, 225, 333, 300, 232, 338, 334, 334, 152, 334,
        /*  2230 */
        334, 77, 141, 334, 334, 334, 334, 334, 334, 334,
        /*  2240 */
        304, 330, 334, 334, 214, 225, 333, 300, 334, 338,
        /*  2250 */
        232, 334, 334, 334, 152, 334, 334, 62, 141, 334,
        /*  2260 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2270 */
        214, 225, 333, 300, 334, 338, 232, 334, 334, 334,
        /*  2280 */
        152, 334, 334, 74, 141, 334, 334, 334, 334, 334,
        /*  2290 */
        334, 334, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  2300 */
        334, 338, 334, 334, 334, 232, 334, 334, 334, 111,
        /*  2310 */
        334, 334, 71, 141, 334, 334, 334, 334, 334, 334,
        /*  2320 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 232,
        /*  2330 */
        338, 334, 334, 113, 334, 334, 73, 141, 334, 334,
        /*  2340 */
        334, 334, 334, 334, 334, 304, 330, 334, 334, 214,
        /*  2350 */
        225, 333, 300, 334, 338, 232, 334, 334, 334, 152,
        /*  2360 */
        334, 334, 60, 141, 334, 334, 334, 334, 334, 334,
        /*  2370 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 334,
        /*  2380 */
        338, 232, 334, 334, 334, 92, 334, 334, 55, 119,
        /*  2390 */
        334, 334, 334, 334, 334, 334, 334, 304, 330, 334,
        /*  2400 */
        334, 214, 225, 333, 300, 334, 338, 334, 334, 334,
        /*  2410 */
        232, 334, 334, 334, 127, 334, 334, 58, 141, 334,
        /*  2420 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2430 */
        214, 225, 333, 300, 232, 338, 334, 334, 152, 334,
        /*  2440 */
        334, 75, 141, 334, 334, 334, 334, 334, 334, 334,
        /*  2450 */
        304, 330, 334, 334, 214, 225, 333, 300, 334, 338,
        /*  2460 */
        232, 334, 334, 334, 152, 334, 334, 54, 141, 334,
        /*  2470 */
        334, 334, 334, 334, 334, 334, 304, 330, 334, 334,
        /*  2480 */
        214, 225, 333, 300, 334, 338, 232, 334, 334, 334,
        /*  2490 */
        152, 334, 334, 65, 141, 334, 334, 334, 334, 334,
        /*  2500 */
        334, 334, 304, 330, 334, 334, 214, 225, 333, 300,
        /*  2510 */
        334, 338, 334, 334, 334, 232, 334, 334, 334, 152,
        /*  2520 */
        334, 334, 53, 141, 334, 334, 334, 334, 334, 334,
        /*  2530 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 232,
        /*  2540 */
        338, 334, 334, 152, 334, 334, 85, 141, 334, 334,
        /*  2550 */
        334, 334, 334, 334, 334, 304, 330, 334, 334, 214,
        /*  2560 */
        225, 333, 300, 334, 338, 232, 334, 334, 334, 152,
        /*  2570 */
        334, 334, 90, 141, 334, 334, 334, 334, 334, 334,
        /*  2580 */
        334, 304, 330, 334, 334, 214, 225, 333, 300, 334,
        /*  2590 */
        338,
    );
    static public $yy_lookahead = array(
        /*     0 */
        1, 19, 3, 93, 93, 4, 5, 6, 7, 8,
        /*    10 */
        9, 10, 11, 12, 13, 14, 15, 106, 107, 18,
        /*    20 */
        15, 16, 17, 20, 23, 24, 26, 19, 20, 30,
        /*    30 */
        29, 121, 121, 93, 33, 36, 35, 117, 118, 39,
        /*    40 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*    50 */
        51, 52, 53, 54, 1, 55, 85, 86, 87, 88,
        /*    60 */
        89, 121, 122, 63, 100, 18, 19, 20, 69, 70,
        /*    70 */
        71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
        /*    80 */
        116, 28, 82, 30, 37, 1, 60, 3, 18, 36,
        /*    90 */
        20, 21, 18, 67, 41, 42, 43, 44, 45, 46,
        /*   100 */
        47, 48, 49, 50, 51, 52, 53, 54, 1, 62,
        /*   110 */
        1, 3, 3, 39, 30, 31, 18, 39, 20, 21,
        /*   120 */
        36, 2, 69, 70, 71, 72, 73, 74, 75, 76,
        /*   130 */
        77, 78, 79, 80, 26, 65, 30, 30, 60, 30,
        /*   140 */
        21, 63, 36, 36, 40, 36, 68, 39, 41, 42,
        /*   150 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   160 */
        53, 54, 1, 55, 3, 93, 94, 18, 19, 20,
        /*   170 */
        38, 63, 18, 1, 20, 103, 69, 70, 71, 72,
        /*   180 */
        73, 74, 75, 76, 77, 78, 79, 80, 26, 93,
        /*   190 */
        94, 66, 1, 121, 3, 38, 18, 40, 20, 103,
        /*   200 */
        68, 39, 41, 42, 43, 44, 45, 46, 47, 48,
        /*   210 */
        49, 50, 51, 52, 53, 54, 1, 121, 1, 65,
        /*   220 */
        3, 30, 87, 88, 89, 63, 60, 36, 19, 20,
        /*   230 */
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
        /*   240 */
        79, 80, 1, 65, 3, 32, 18, 30, 20, 21,
        /*   250 */
        117, 118, 39, 36, 26, 40, 41, 42, 43, 44,
        /*   260 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
        /*   270 */
        1, 30, 60, 64, 94, 66, 63, 36, 115, 67,
        /*   280 */
        117, 118, 20, 103, 69, 70, 71, 72, 73, 74,
        /*   290 */
        75, 76, 77, 78, 79, 80, 116, 93, 94, 94,
        /*   300 */
        31, 1, 96, 97, 98, 19, 20, 103, 103, 39,
        /*   310 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   320 */
        51, 52, 53, 54, 1, 121, 121, 38, 94, 40,
        /*   330 */
        30, 21, 39, 63, 19, 102, 36, 103, 69, 70,
        /*   340 */
        71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
        /*   350 */
        26, 88, 66, 20, 39, 121, 63, 38, 93, 40,
        /*   360 */
        39, 114, 20, 39, 41, 42, 43, 44, 45, 46,
        /*   370 */
        47, 48, 49, 50, 51, 52, 53, 54, 1, 55,
        /*   380 */
        3, 94, 94, 18, 63, 20, 121, 63, 125, 126,
        /*   390 */
        103, 103, 69, 70, 71, 72, 73, 74, 75, 76,
        /*   400 */
        77, 78, 79, 80, 116, 82, 94, 65, 121, 1,
        /*   410 */
        2, 1, 18, 3, 20, 103, 21, 22, 41, 42,
        /*   420 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   430 */
        53, 54, 1, 121, 94, 18, 114, 20, 116, 93,
        /*   440 */
        18, 39, 20, 103, 100, 1, 69, 70, 71, 72,
        /*   450 */
        73, 74, 75, 76, 77, 78, 79, 80, 63, 88,
        /*   460 */
        116, 1, 114, 30, 116, 122, 22, 121, 2, 36,
        /*   470 */
        21, 22, 41, 42, 43, 44, 45, 46, 47, 48,
        /*   480 */
        49, 50, 51, 52, 53, 54, 1, 94, 3, 89,
        /*   490 */
        22, 91, 32, 18, 118, 20, 103, 126, 100, 68,
        /*   500 */
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
        /*   510 */
        79, 80, 63, 112, 116, 94, 96, 97, 114, 114,
        /*   520 */
        119, 102, 96, 97, 103, 100, 41, 42, 43, 44,
        /*   530 */
        45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
        /*   540 */
        1, 116, 3, 102, 94, 19, 19, 19, 66, 20,
        /*   550 */
        20, 3, 101, 103, 69, 70, 71, 72, 73, 74,
        /*   560 */
        75, 76, 77, 78, 79, 80, 116, 116, 112, 20,
        /*   570 */
        3, 3, 19, 56, 20, 119, 68, 37, 20, 100,
        /*   580 */
        41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
        /*   590 */
        51, 52, 53, 54, 1, 116, 2, 27, 94, 37,
        /*   600 */
        39, 20, 121, 2, 20, 100, 100, 103, 69, 70,
        /*   610 */
        71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
        /*   620 */
        116, 116, 116, 20, 103, 114, 116, 115, 114, 16,
        /*   630 */
        99, 90, 119, 40, 41, 42, 43, 44, 45, 46,
        /*   640 */
        47, 48, 49, 50, 51, 52, 53, 54, 1, 2,
        /*   650 */
        30, 114, 127, 127, 99, 127, 127, 127, 127, 100,
        /*   660 */
        100, 25, 69, 70, 71, 72, 73, 74, 75, 76,
        /*   670 */
        77, 78, 79, 80, 38, 116, 116, 127, 127, 127,
        /*   680 */
        127, 127, 127, 127, 127, 127, 100, 127, 41, 42,
        /*   690 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   700 */
        53, 54, 116, 127, 127, 127, 127, 127, 127, 127,
        /*   710 */
        21, 127, 127, 127, 127, 127, 69, 70, 71, 72,
        /*   720 */
        73, 74, 75, 76, 77, 78, 79, 80, 1, 3,
        /*   730 */
        127, 96, 127, 96, 127, 127, 127, 127, 88, 127,
        /*   740 */
        127, 127, 92, 108, 109, 108, 96, 22, 113, 60,
        /*   750 */
        113, 25, 25, 27, 28, 105, 30, 31, 108, 109,
        /*   760 */
        110, 111, 36, 113, 38, 39, 40, 127, 41, 42,
        /*   770 */
        43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        /*   780 */
        53, 54, 1, 127, 127, 60, 127, 127, 127, 63,
        /*   790 */
        127, 127, 67, 127, 68, 22, 69, 70, 71, 72,
        /*   800 */
        73, 74, 75, 76, 77, 78, 79, 80, 82, 127,
        /*   810 */
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        /*   820 */
        127, 127, 41, 42, 43, 44, 45, 46, 47, 48,
        /*   830 */
        49, 50, 51, 52, 53, 54, 63, 127, 127, 127,
        /*   840 */
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        /*   850 */
        69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
        /*   860 */
        79, 80, 127, 127, 41, 42, 43, 44, 45, 46,
        /*   870 */
        47, 48, 49, 50, 51, 52, 53, 54, 127, 127,
        /*   880 */
        127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
        /*   890 */
        127, 127, 69, 70, 71, 72, 73, 74, 75, 76,
        /*   900 */
        77, 78, 79, 80, 127, 127, 3, 11, 127, 127,
        /*   910 */
        127, 18, 19, 20, 18, 127, 23, 24, 127, 23,
        /*   920 */
        24, 127, 29, 127, 21, 29, 33, 127, 35, 33,
        /*   930 */
        37, 35, 39, 30, 127, 42, 127, 127, 127, 36,
        /*   940 */
        127, 127, 39, 127, 18, 127, 20, 127, 127, 127,
        /*   950 */
        57, 58, 59, 60, 61, 62, 30, 64, 32, 66,
        /*   960 */
        67, 68, 36, 127, 127, 127, 63, 127, 127, 127,
        /*   970 */
        18, 19, 20, 127, 81, 23, 24, 81, 82, 83,
        /*   980 */
        127, 29, 127, 127, 127, 33, 34, 35, 127, 37,
        /*   990 */
        127, 39, 93, 94, 42, 127, 127, 127, 127, 127,
        /*  1000 */
        127, 127, 103, 127, 127, 106, 107, 127, 127, 57,
        /*  1010 */
        58, 59, 60, 61, 62, 127, 64, 127, 66, 67,
        /*  1020 */
        121, 127, 127, 127, 18, 11, 20, 127, 127, 18,
        /*  1030 */
        19, 20, 18, 81, 23, 24, 30, 23, 24, 127,
        /*  1040 */
        29, 127, 36, 29, 33, 127, 35, 33, 37, 35,
        /*  1050 */
        39, 127, 127, 42, 127, 127, 127, 127, 127, 88,
        /*  1060 */
        127, 127, 127, 92, 127, 127, 127, 96, 57, 58,
        /*  1070 */
        59, 60, 61, 62, 127, 64, 105, 66, 67, 108,
        /*  1080 */
        109, 110, 111, 127, 113, 127, 127, 127, 18, 19,
        /*  1090 */
        20, 127, 81, 23, 24, 81, 82, 83, 88, 29,
        /*  1100 */
        127, 127, 92, 33, 127, 35, 96, 37, 127, 39,
        /*  1110 */
        127, 127, 42, 127, 127, 127, 127, 127, 108, 109,
        /*  1120 */
        110, 111, 127, 113, 127, 127, 127, 57, 58, 59,
        /*  1130 */
        60, 61, 62, 127, 64, 127, 66, 67, 1, 127,
        /*  1140 */
        3, 127, 18, 127, 20, 127, 127, 18, 19, 20,
        /*  1150 */
        127, 81, 23, 24, 30, 127, 32, 88, 29, 22,
        /*  1160 */
        36, 92, 33, 127, 35, 96, 37, 30, 39, 127,
        /*  1170 */
        127, 42, 127, 36, 127, 127, 39, 108, 109, 110,
        /*  1180 */
        111, 127, 113, 127, 127, 127, 57, 58, 59, 60,
        /*  1190 */
        61, 62, 127, 64, 127, 66, 67, 127, 127, 127,
        /*  1200 */
        63, 127, 127, 127, 127, 127, 18, 19, 20, 127,
        /*  1210 */
        81, 23, 24, 127, 127, 127, 88, 29, 127, 127,
        /*  1220 */
        92, 33, 127, 35, 96, 37, 127, 39, 127, 127,
        /*  1230 */
        42, 127, 127, 127, 127, 127, 108, 109, 110, 111,
        /*  1240 */
        127, 113, 127, 127, 127, 57, 58, 59, 60, 61,
        /*  1250 */
        62, 127, 64, 127, 66, 67, 127, 127, 127, 127,
        /*  1260 */
        127, 127, 127, 127, 127, 18, 19, 20, 127, 81,
        /*  1270 */
        23, 24, 127, 127, 127, 88, 29, 127, 127, 92,
        /*  1280 */
        33, 127, 35, 96, 37, 127, 39, 127, 127, 42,
        /*  1290 */
        127, 127, 127, 127, 127, 108, 109, 110, 111, 127,
        /*  1300 */
        113, 127, 127, 127, 57, 58, 59, 60, 61, 62,
        /*  1310 */
        127, 64, 127, 66, 67, 127, 127, 127, 127, 127,
        /*  1320 */
        127, 127, 127, 127, 18, 19, 20, 127, 81, 23,
        /*  1330 */
        24, 127, 127, 127, 88, 29, 127, 127, 92, 33,
        /*  1340 */
        127, 35, 96, 37, 127, 39, 127, 127, 42, 127,
        /*  1350 */
        127, 127, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  1360 */
        127, 127, 127, 57, 58, 59, 60, 61, 62, 127,
        /*  1370 */
        64, 127, 66, 67, 127, 127, 127, 127, 127, 127,
        /*  1380 */
        127, 127, 127, 18, 19, 20, 127, 81, 23, 24,
        /*  1390 */
        127, 127, 127, 88, 29, 127, 127, 92, 33, 127,
        /*  1400 */
        35, 96, 37, 127, 39, 127, 127, 42, 127, 127,
        /*  1410 */
        127, 127, 127, 108, 109, 110, 111, 127, 113, 127,
        /*  1420 */
        127, 127, 57, 58, 59, 60, 61, 62, 127, 64,
        /*  1430 */
        127, 66, 67, 127, 127, 127, 127, 127, 127, 127,
        /*  1440 */
        127, 127, 18, 19, 20, 127, 81, 23, 24, 127,
        /*  1450 */
        127, 127, 127, 29, 127, 127, 127, 33, 127, 35,
        /*  1460 */
        127, 37, 127, 39, 93, 94, 42, 127, 127, 127,
        /*  1470 */
        127, 127, 127, 127, 103, 127, 127, 106, 107, 127,
        /*  1480 */
        127, 57, 58, 59, 60, 61, 62, 88, 64, 127,
        /*  1490 */
        66, 92, 121, 127, 95, 96, 127, 127, 127, 127,
        /*  1500 */
        127, 127, 127, 104, 105, 81, 127, 108, 109, 110,
        /*  1510 */
        111, 88, 113, 127, 127, 92, 127, 127, 95, 96,
        /*  1520 */
        127, 127, 123, 124, 127, 127, 127, 104, 105, 127,
        /*  1530 */
        127, 108, 109, 110, 111, 88, 113, 127, 127, 92,
        /*  1540 */
        127, 127, 95, 96, 97, 127, 88, 124, 127, 127,
        /*  1550 */
        92, 104, 105, 95, 96, 108, 109, 110, 111, 127,
        /*  1560 */
        113, 127, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  1570 */
        88, 113, 127, 127, 92, 127, 127, 95, 96, 97,
        /*  1580 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  1590 */
        108, 109, 110, 111, 88, 113, 127, 127, 92, 127,
        /*  1600 */
        127, 95, 96, 127, 127, 127, 127, 127, 127, 127,
        /*  1610 */
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  1620 */
        88, 93, 94, 127, 92, 127, 120, 95, 96, 127,
        /*  1630 */
        127, 103, 127, 127, 106, 107, 104, 105, 127, 127,
        /*  1640 */
        108, 109, 110, 111, 127, 113, 88, 127, 127, 121,
        /*  1650 */
        92, 127, 120, 95, 96, 127, 127, 127, 127, 127,
        /*  1660 */
        93, 94, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  1670 */
        103, 113, 127, 106, 107, 88, 127, 127, 120, 92,
        /*  1680 */
        127, 127, 95, 96, 127, 127, 127, 127, 121, 127,
        /*  1690 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 88,
        /*  1700 */
        113, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        /*  1710 */
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        /*  1720 */
        109, 110, 111, 127, 113, 88, 127, 127, 127, 92,
        /*  1730 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  1740 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        /*  1750 */
        113, 88, 127, 127, 127, 92, 127, 127, 95, 96,
        /*  1760 */
        127, 127, 127, 127, 127, 93, 94, 104, 105, 127,
        /*  1770 */
        127, 108, 109, 110, 111, 103, 113, 127, 106, 107,
        /*  1780 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  1790 */
        127, 127, 127, 121, 127, 127, 104, 105, 127, 127,
        /*  1800 */
        108, 109, 110, 111, 88, 113, 127, 127, 92, 127,
        /*  1810 */
        127, 95, 96, 127, 127, 127, 127, 127, 127, 127,
        /*  1820 */
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  1830 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  1840 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  1850 */
        108, 109, 110, 111, 127, 113, 88, 127, 127, 127,
        /*  1860 */
        92, 127, 127, 95, 96, 127, 127, 127, 127, 127,
        /*  1870 */
        93, 94, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  1880 */
        103, 113, 127, 106, 107, 88, 127, 127, 127, 92,
        /*  1890 */
        127, 127, 95, 96, 127, 127, 127, 127, 121, 127,
        /*  1900 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 88,
        /*  1910 */
        113, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        /*  1920 */
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        /*  1930 */
        109, 110, 111, 127, 113, 88, 127, 127, 127, 92,
        /*  1940 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  1950 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        /*  1960 */
        113, 88, 127, 127, 127, 92, 127, 127, 95, 96,
        /*  1970 */
        127, 127, 127, 127, 127, 127, 127, 104, 105, 127,
        /*  1980 */
        127, 108, 109, 110, 111, 127, 113, 127, 127, 127,
        /*  1990 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2000 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2010 */
        108, 109, 110, 111, 88, 113, 127, 127, 92, 127,
        /*  2020 */
        127, 95, 96, 127, 127, 127, 127, 127, 127, 127,
        /*  2030 */
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  2040 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2050 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2060 */
        108, 109, 110, 111, 127, 113, 88, 127, 127, 127,
        /*  2070 */
        92, 127, 127, 95, 96, 127, 127, 127, 127, 127,
        /*  2080 */
        127, 127, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  2090 */
        127, 113, 127, 127, 127, 88, 127, 127, 127, 92,
        /*  2100 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2110 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 88,
        /*  2120 */
        113, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        /*  2130 */
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        /*  2140 */
        109, 110, 111, 127, 113, 88, 127, 127, 127, 92,
        /*  2150 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2160 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        /*  2170 */
        113, 88, 127, 127, 127, 92, 127, 127, 95, 96,
        /*  2180 */
        127, 127, 127, 127, 127, 127, 127, 104, 105, 127,
        /*  2190 */
        127, 108, 109, 110, 111, 127, 113, 127, 127, 127,
        /*  2200 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2210 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2220 */
        108, 109, 110, 111, 88, 113, 127, 127, 92, 127,
        /*  2230 */
        127, 95, 96, 127, 127, 127, 127, 127, 127, 127,
        /*  2240 */
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  2250 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2260 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2270 */
        108, 109, 110, 111, 127, 113, 88, 127, 127, 127,
        /*  2280 */
        92, 127, 127, 95, 96, 127, 127, 127, 127, 127,
        /*  2290 */
        127, 127, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  2300 */
        127, 113, 127, 127, 127, 88, 127, 127, 127, 92,
        /*  2310 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2320 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 88,
        /*  2330 */
        113, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        /*  2340 */
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        /*  2350 */
        109, 110, 111, 127, 113, 88, 127, 127, 127, 92,
        /*  2360 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2370 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        /*  2380 */
        113, 88, 127, 127, 127, 92, 127, 127, 95, 96,
        /*  2390 */
        127, 127, 127, 127, 127, 127, 127, 104, 105, 127,
        /*  2400 */
        127, 108, 109, 110, 111, 127, 113, 127, 127, 127,
        /*  2410 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2420 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2430 */
        108, 109, 110, 111, 88, 113, 127, 127, 92, 127,
        /*  2440 */
        127, 95, 96, 127, 127, 127, 127, 127, 127, 127,
        /*  2450 */
        104, 105, 127, 127, 108, 109, 110, 111, 127, 113,
        /*  2460 */
        88, 127, 127, 127, 92, 127, 127, 95, 96, 127,
        /*  2470 */
        127, 127, 127, 127, 127, 127, 104, 105, 127, 127,
        /*  2480 */
        108, 109, 110, 111, 127, 113, 88, 127, 127, 127,
        /*  2490 */
        92, 127, 127, 95, 96, 127, 127, 127, 127, 127,
        /*  2500 */
        127, 127, 104, 105, 127, 127, 108, 109, 110, 111,
        /*  2510 */
        127, 113, 127, 127, 127, 88, 127, 127, 127, 92,
        /*  2520 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2530 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 88,
        /*  2540 */
        113, 127, 127, 92, 127, 127, 95, 96, 127, 127,
        /*  2550 */
        127, 127, 127, 127, 127, 104, 105, 127, 127, 108,
        /*  2560 */
        109, 110, 111, 127, 113, 88, 127, 127, 127, 92,
        /*  2570 */
        127, 127, 95, 96, 127, 127, 127, 127, 127, 127,
        /*  2580 */
        127, 104, 105, 127, 127, 108, 109, 110, 111, 127,
        /*  2590 */
        113,
    );
    const YY_SHIFT_USE_DFLT = - 19;
    const YY_SHIFT_MAX = 260;
    static public $yy_shift_ofst = array(
        /*     0 */
        1, 1188, 1011, 1011, 1129, 1188, 1011, 1129, 952, 893,
        /*    10 */
        952, 1011, 1070, 1365, 1011, 1011, 1011, 1011, 1011, 1011,
        /*    20 */
        1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
        /*    30 */
        1011, 1011, 1306, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
        /*    40 */
        1070, 1011, 1011, 1011, 1247, 1247, 1424, 1424, 1424, 1424,
        /*    50 */
        1424, 1424, - 1, 53, 107, 107, 107, 107, 107, 485,
        /*    60 */
        431, 593, 647, 727, 323, 161, 215, 377, 269, 539,
        /*    70 */
        781, 781, 781, 781, 781, 781, 781, 781, 781, 781,
        /*    80 */
        781, 781, 781, 781, 781, 781, 781, 781, 781, 823,
        /*    90 */
        823, 1137, 191, 209, 300, 1, 896, 1124, 926, 109,
        /*   100 */
        1006, 109, 1006, 286, 300, 725, 300, 408, 315, 1014,
        /*   110 */
        84, 217, 70, 241, 228, 5, 154, 449, 98, 395,
        /*   120 */
        422, 365, 433, 365, 8, 444, 106, 410, 365, 394,
        /*   130 */
        365, 460, 365, 417, 365, 315, 365, 365, 106, 422,
        /*   140 */
        475, 773, 365, 8, 315, 172, 172, 172, 172, 172,
        /*   150 */
        172, 468, 172, 172, 172, 468, - 19, 178, 149, 106,
        /*   160 */
        106, 106, 106, 106, 106, 26, 106, 106, 212, 106,
        /*   170 */
        106, 106, 106, 26, 212, 106, 106, 106, 106, 212,
        /*   180 */
        212, 212, 106, 106, 106, 212, 106, 74, 212, 620,
        /*   190 */
        620, 172, 468, 172, 466, 172, 172, 613, 468, 172,
        /*   200 */
        466, 402, 468, - 19, - 19, - 19, - 19, - 19, 726, 903,
        /*   210 */
        0, 47, 108, 78, 324, 162, 213, 119, 270, 157,
        /*   220 */
        289, 319, 636, 689, 132, 321, 342, 293, 548, 402,
        /*   230 */
        568, 549, 567, 529, 554, 561, 508, 526, 166, - 18,
        /*   240 */
        581, 333, 527, 530, 594, 553, 528, 482, 517, 570,
        /*   250 */
        601, 562, 540, 558, 584, 603, 310, 125, 104, 3,
        /*   260 */
        262,
    );
    const YY_REDUCE_USE_DFLT = - 91;
    const YY_REDUCE_MAX = 207;
    static public $yy_reduce_ofst = array(
        /*     0 */
        - 29, 1399, 1532, 1558, 1482, 1423, 1506, 1447, 2293, 2267,
        /*    10 */
        1716, 1663, 1637, 1587, 1742, 1692, 1611, 2136, 1458, 2031,
        /*    20 */
        2007, 2057, 2083, 2112, 1978, 1952, 1821, 1797, 1847, 1873,
        /*    30 */
        1926, 1902, 2162, 2322, 2372, 2427, 2477, 2451, 2398, 2346,
        /*    40 */
        2217, 2188, 2241, 1768, 971, 650, 1069, 1010, 1128, 1187,
        /*    50 */
        1305, 1246, 1672, 899, 1777, 1672, 1567, 1371, 1528, - 89,
        /*    60 */
        - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89,
        /*    70 */
        - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89,
        /*    80 */
        - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89, - 89,
        /*    90 */
        - 89, 72, 204, 635, 96, 135, 263, 450, 504, 287,
        /*   100 */
        288, 205, 180, 637, 234, 163, 312, - 60, 206, 371,
        /*   110 */
        - 90, - 90, 348, - 90, 451, 400, 348, - 80, 348, - 80,
        /*   120 */
        344, 425, 393, 479, 401, 346, 340, - 90, - 36, 398,
        /*   130 */
        344, - 90, 322, 344, 586, 426, 560, 506, 421, 505,
        /*   140 */
        344, - 80, 559, 456, 420, 265, - 90, - 90, - 90, - 90,
        /*   150 */
        - 90, - 80, - 90, - 90, - 90, 133, - 90, 510, 513, 521,
        /*   160 */
        521, 521, 521, 521, 521, 514, 521, 521, 512, 521,
        /*   170 */
        521, 521, 521, 511, 512, 521, 521, 521, 521, 512,
        /*   180 */
        512, 512, 521, 521, 521, 512, 521, 537, 512, 555,
        /*   190 */
        531, 481, 376, 481, 343, 481, 481, 541, 376, 481,
        /*   200 */
        343, 247, 376, 441, 405, 419, 404, 233,
    );
    static public $yyExpectedTokens = array(
        /* 0 */
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35,),
        /* 1 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 2 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 3 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 4 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 5 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 6 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 7 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 8 */
        array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 9 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 81,),
        /* 10 */
        array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 11 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 12 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 13 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 14 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 15 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 16 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 17 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 18 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 19 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 20 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 21 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 22 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 23 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 24 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 25 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 26 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 27 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 28 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 29 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 30 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 31 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 32 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 33 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 34 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 35 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 36 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 37 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 38 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 39 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 40 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 41 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 42 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 43 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 44 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 45 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 67, 81,),
        /* 46 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 47 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 48 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 49 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 50 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 51 */
        array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 62, 64, 66, 81,),
        /* 52 */
        array(1, 3, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 53 */
        array(1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 54 */
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 55 */
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 56 */
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 57 */
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 58 */
        array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 59 */
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 60 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 61 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 62 */
        array(1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 63 */
        array(1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 64 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82,),
        /* 65 */
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 66 */
        array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 67 */
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 68 */
        array(1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 69 */
        array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 70 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 71 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 72 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 73 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 74 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 75 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 76 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 77 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 78 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 79 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 80 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 81 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 82 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 83 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 84 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 85 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 86 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 87 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 88 */
        array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 89 */
        array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 90 */
        array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,),
        /* 91 */
        array(1, 3, 22, 30, 36, 39, 63,),
        /* 92 */
        array(1, 3, 30, 36,),
        /* 93 */
        array(19, 20, 64, 66,),
        /* 94 */
        array(1, 30, 36,),
        /* 95 */
        array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35,),
        /* 96 */
        array(11, 18, 23, 24, 29, 33, 35, 81, 82, 83,),
        /* 97 */
        array(18, 20, 30, 32, 36,),
        /* 98 */
        array(18, 20, 30, 32, 36,),
        /* 99 */
        array(1, 3, 30, 36,),
        /* 100 */
        array(18, 20, 30, 36,),
        /* 101 */
        array(1, 3, 30, 36,),
        /* 102 */
        array(18, 20, 30, 36,),
        /* 103 */
        array(19, 20, 66,),
        /* 104 */
        array(1, 30, 36,),
        /* 105 */
        array(22, 60, 67,),
        /* 106 */
        array(1, 30, 36,),
        /* 107 */
        array(1, 2,),
        /* 108 */
        array(19, 39,),
        /* 109 */
        array(11, 18, 23, 24, 29, 33, 35, 81, 82, 83,),
        /* 110 */
        array(1, 3, 30, 31, 36,),
        /* 111 */
        array(1, 3, 30, 36,),
        /* 112 */
        array(18, 20, 21, 65,),
        /* 113 */
        array(1, 3, 30, 36,),
        /* 114 */
        array(18, 20, 21, 26,),
        /* 115 */
        array(15, 16, 17,),
        /* 116 */
        array(18, 20, 65,),
        /* 117 */
        array(21, 22, 63,),
        /* 118 */
        array(18, 20, 21,),
        /* 119 */
        array(21, 22, 63,),
        /* 120 */
        array(18, 20,),
        /* 121 */
        array(18, 20,),
        /* 122 */
        array(30, 36,),
        /* 123 */
        array(18, 20,),
        /* 124 */
        array(19, 20,),
        /* 125 */
        array(1, 22,),
        /* 126 */
        array(30, 36,),
        /* 127 */
        array(1, 3,),
        /* 128 */
        array(18, 20,),
        /* 129 */
        array(18, 20,),
        /* 130 */
        array(18, 20,),
        /* 131 */
        array(1, 32,),
        /* 132 */
        array(18, 20,),
        /* 133 */
        array(18, 20,),
        /* 134 */
        array(18, 20,),
        /* 135 */
        array(19, 39,),
        /* 136 */
        array(18, 20,),
        /* 137 */
        array(18, 20,),
        /* 138 */
        array(30, 36,),
        /* 139 */
        array(18, 20,),
        /* 140 */
        array(18, 20,),
        /* 141 */
        array(22, 63,),
        /* 142 */
        array(18, 20,),
        /* 143 */
        array(19, 20,),
        /* 144 */
        array(19, 39,),
        /* 145 */
        array(1,),
        /* 146 */
        array(1,),
        /* 147 */
        array(1,),
        /* 148 */
        array(1,),
        /* 149 */
        array(1,),
        /* 150 */
        array(1,),
        /* 151 */
        array(22,),
        /* 152 */
        array(1,),
        /* 153 */
        array(1,),
        /* 154 */
        array(1,),
        /* 155 */
        array(22,),
        /* 156 */
        array(),
        /* 157 */
        array(18, 20, 65,),
        /* 158 */
        array(18, 19, 20,),
        /* 159 */
        array(30, 36,),
        /* 160 */
        array(30, 36,),
        /* 161 */
        array(30, 36,),
        /* 162 */
        array(30, 36,),
        /* 163 */
        array(30, 36,),
        /* 164 */
        array(30, 36,),
        /* 165 */
        array(60, 67,),
        /* 166 */
        array(30, 36,),
        /* 167 */
        array(30, 36,),
        /* 168 */
        array(60, 67,),
        /* 169 */
        array(30, 36,),
        /* 170 */
        array(30, 36,),
        /* 171 */
        array(30, 36,),
        /* 172 */
        array(30, 36,),
        /* 173 */
        array(60, 67,),
        /* 174 */
        array(60, 67,),
        /* 175 */
        array(30, 36,),
        /* 176 */
        array(30, 36,),
        /* 177 */
        array(30, 36,),
        /* 178 */
        array(30, 36,),
        /* 179 */
        array(60, 67,),
        /* 180 */
        array(60, 67,),
        /* 181 */
        array(60, 67,),
        /* 182 */
        array(30, 36,),
        /* 183 */
        array(30, 36,),
        /* 184 */
        array(30, 36,),
        /* 185 */
        array(60, 67,),
        /* 186 */
        array(30, 36,),
        /* 187 */
        array(18, 39,),
        /* 188 */
        array(60, 67,),
        /* 189 */
        array(30,),
        /* 190 */
        array(30,),
        /* 191 */
        array(1,),
        /* 192 */
        array(22,),
        /* 193 */
        array(1,),
        /* 194 */
        array(2,),
        /* 195 */
        array(1,),
        /* 196 */
        array(1,),
        /* 197 */
        array(16,),
        /* 198 */
        array(22,),
        /* 199 */
        array(1,),
        /* 200 */
        array(2,),
        /* 201 */
        array(39,),
        /* 202 */
        array(22,),
        /* 203 */
        array(),
        /* 204 */
        array(),
        /* 205 */
        array(),
        /* 206 */
        array(),
        /* 207 */
        array(),
        /* 208 */
        array(3, 25, 27, 28, 30, 31, 36, 38, 39, 40, 63, 68, 82,),
        /* 209 */
        array(3, 21, 30, 36, 39, 63,),
        /* 210 */
        array(26, 39, 55, 63, 82,),
        /* 211 */
        array(18, 19, 20, 37, 62,),
        /* 212 */
        array(3, 26, 39, 55, 63,),
        /* 213 */
        array(39, 60, 63, 68,),
        /* 214 */
        array(26, 39, 55, 63,),
        /* 215 */
        array(26, 39, 63,),
        /* 216 */
        array(32, 39, 63,),
        /* 217 */
        array(2, 21,),
        /* 218 */
        array(39, 63,),
        /* 219 */
        array(38, 40,),
        /* 220 */
        array(38, 40,),
        /* 221 */
        array(38, 40,),
        /* 222 */
        array(25, 38,),
        /* 223 */
        array(21, 60,),
        /* 224 */
        array(38, 68,),
        /* 225 */
        array(39, 63,),
        /* 226 */
        array(20, 65,),
        /* 227 */
        array(39, 63,),
        /* 228 */
        array(3,),
        /* 229 */
        array(39,),
        /* 230 */
        array(3,),
        /* 231 */
        array(20,),
        /* 232 */
        array(3,),
        /* 233 */
        array(20,),
        /* 234 */
        array(20,),
        /* 235 */
        array(39,),
        /* 236 */
        array(68,),
        /* 237 */
        array(19,),
        /* 238 */
        array(60,),
        /* 239 */
        array(19,),
        /* 240 */
        array(20,),
        /* 241 */
        array(20,),
        /* 242 */
        array(19,),
        /* 243 */
        array(20,),
        /* 244 */
        array(2,),
        /* 245 */
        array(19,),
        /* 246 */
        array(19,),
        /* 247 */
        array(66,),
        /* 248 */
        array(56,),
        /* 249 */
        array(27,),
        /* 250 */
        array(2,),
        /* 251 */
        array(37,),
        /* 252 */
        array(37,),
        /* 253 */
        array(20,),
        /* 254 */
        array(20,),
        /* 255 */
        array(20,),
        /* 256 */
        array(21,),
        /* 257 */
        array(66,),
        /* 258 */
        array(40,),
        /* 259 */
        array(20,),
        /* 260 */
        array(20,),
        /* 261 */
        array(),
        /* 262 */
        array(),
        /* 263 */
        array(),
        /* 264 */
        array(),
        /* 265 */
        array(),
        /* 266 */
        array(),
        /* 267 */
        array(),
        /* 268 */
        array(),
        /* 269 */
        array(),
        /* 270 */
        array(),
        /* 271 */
        array(),
        /* 272 */
        array(),
        /* 273 */
        array(),
        /* 274 */
        array(),
        /* 275 */
        array(),
        /* 276 */
        array(),
        /* 277 */
        array(),
        /* 278 */
        array(),
        /* 279 */
        array(),
        /* 280 */
        array(),
        /* 281 */
        array(),
        /* 282 */
        array(),
        /* 283 */
        array(),
        /* 284 */
        array(),
        /* 285 */
        array(),
        /* 286 */
        array(),
        /* 287 */
        array(),
        /* 288 */
        array(),
        /* 289 */
        array(),
        /* 290 */
        array(),
        /* 291 */
        array(),
        /* 292 */
        array(),
        /* 293 */
        array(),
        /* 294 */
        array(),
        /* 295 */
        array(),
        /* 296 */
        array(),
        /* 297 */
        array(),
        /* 298 */
        array(),
        /* 299 */
        array(),
        /* 300 */
        array(),
        /* 301 */
        array(),
        /* 302 */
        array(),
        /* 303 */
        array(),
        /* 304 */
        array(),
        /* 305 */
        array(),
        /* 306 */
        array(),
        /* 307 */
        array(),
        /* 308 */
        array(),
        /* 309 */
        array(),
        /* 310 */
        array(),
        /* 311 */
        array(),
        /* 312 */
        array(),
        /* 313 */
        array(),
        /* 314 */
        array(),
        /* 315 */
        array(),
        /* 316 */
        array(),
        /* 317 */
        array(),
        /* 318 */
        array(),
        /* 319 */
        array(),
        /* 320 */
        array(),
        /* 321 */
        array(),
        /* 322 */
        array(),
        /* 323 */
        array(),
        /* 324 */
        array(),
        /* 325 */
        array(),
        /* 326 */
        array(),
        /* 327 */
        array(),
        /* 328 */
        array(),
        /* 329 */
        array(),
        /* 330 */
        array(),
        /* 331 */
        array(),
        /* 332 */
        array(),
        /* 333 */
        array(),
        /* 334 */
        array(),
        /* 335 */
        array(),
        /* 336 */
        array(),
        /* 337 */
        array(),
        /* 338 */
        array(),
        /* 339 */
        array(),
        /* 340 */
        array(),
        /* 341 */
        array(),
        /* 342 */
        array(),
        /* 343 */
        array(),
        /* 344 */
        array(),
        /* 345 */
        array(),
        /* 346 */
        array(),
        /* 347 */
        array(),
        /* 348 */
        array(),
        /* 349 */
        array(),
        /* 350 */
        array(),
        /* 351 */
        array(),
        /* 352 */
        array(),
        /* 353 */
        array(),
        /* 354 */
        array(),
        /* 355 */
        array(),
        /* 356 */
        array(),
        /* 357 */
        array(),
        /* 358 */
        array(),
        /* 359 */
        array(),
        /* 360 */
        array(),
        /* 361 */
        array(),
        /* 362 */
        array(),
        /* 363 */
        array(),
        /* 364 */
        array(),
    );
    static public $yy_default = array(
        /*     0 */
        368, 553, 524, 524, 570, 570, 524, 570, 570, 570,
        /*    10 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    20 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    30 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    40 */
        570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
        /*    50 */
        570, 570, 570, 425, 425, 425, 402, 425, 394, 570,
        /*    60 */
        570, 570, 570, 570, 570, 570, 570, 570, 430, 570,
        /*    70 */
        523, 430, 446, 427, 432, 522, 458, 554, 555, 556,
        /*    80 */
        455, 454, 436, 450, 451, 435, 449, 459, 407, 461,
        /*    90 */
        462, 473, 438, 570, 425, 365, 570, 425, 425, 445,
        /*   100 */
        425, 481, 425, 570, 425, 536, 425, 416, 570, 570,
        /*   110 */
        438, 438, 496, 438, 570, 570, 496, 487, 496, 487,
        /*   120 */
        570, 570, 425, 570, 570, 419, 425, 438, 570, 570,
        /*   130 */
        570, 438, 496, 570, 570, 570, 570, 570, 404, 570,
        /*   140 */
        570, 487, 570, 570, 570, 421, 441, 443, 465, 464,
        /*   150 */
        448, 487, 438, 442, 466, 533, 531, 497, 570, 396,
        /*   160 */
        392, 406, 391, 411, 395, 490, 415, 414, 493, 409,
        /*   170 */
        410, 390, 405, 492, 491, 403, 400, 399, 389, 517,
        /*   180 */
        516, 515, 397, 401, 413, 494, 412, 496, 514, 569,
        /*   190 */
        569, 445, 511, 417, 525, 420, 422, 385, 534, 481,
        /*   200 */
        526, 496, 537, 530, 496, 530, 496, 530, 440, 473,
        /*   210 */
        463, 570, 463, 473, 463, 463, 473, 509, 482, 570,
        /*   220 */
        570, 570, 570, 469, 570, 570, 570, 473, 570, 509,
        /*   230 */
        570, 570, 570, 570, 570, 535, 570, 570, 469, 570,
        /*   240 */
        570, 570, 570, 570, 509, 570, 570, 570, 475, 433,
        /*   250 */
        509, 471, 570, 570, 570, 570, 570, 570, 570, 570,
        /*   260 */
        570, 532, 382, 502, 520, 475, 519, 510, 483, 381,
        /*   270 */
        479, 370, 467, 371, 372, 374, 373, 501, 500, 367,
        /*   280 */
        366, 498, 369, 499, 507, 437, 476, 379, 408, 380,
        /*   290 */
        426, 480, 528, 568, 434, 376, 375, 377, 378, 478,
        /*   300 */
        477, 468, 447, 424, 439, 456, 457, 488, 440, 508,
        /*   310 */
        509, 512, 529, 495, 452, 565, 453, 538, 486, 544,
        /*   320 */
        545, 543, 542, 540, 541, 546, 547, 484, 485, 460,
        /*   330 */
        444, 548, 549, 474, 418, 521, 387, 539, 489, 551,
        /*   340 */
        470, 386, 384, 503, 504, 505, 527, 383, 518, 552,
        /*   350 */
        423, 559, 562, 558, 472, 564, 557, 561, 563, 513,
        /*   360 */
        550, 560, 567, 566, 506,
    );
    const YYNOCODE = 128;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 365;
    const YYNRULE = 205;
    const YYERRORSYMBOL = 84;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array();

    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
        '$', 'VERT', 'COLON', 'RDEL',
        'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG', 'PHPENDSCRIPT',
        'ASPSTARTTAG', 'ASPENDTAG', 'XMLTAG', 'TEXT',
        'STRIPON', 'STRIPOFF', 'BLOCKSOURCE', 'LITERALSTART',
        'LITERALEND', 'LITERAL', 'LDEL', 'DOLLAR',
        'ID', 'EQUAL', 'PTR', 'LDELIF',
        'LDELFOR', 'SEMICOLON', 'INCDEC', 'TO',
        'STEP', 'LDELFOREACH', 'SPACE', 'AS',
        'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT', 'LDELSLASH',
        'ATTR', 'INTEGER', 'COMMA', 'OPENP',
        'CLOSEP', 'MATH', 'UNIMATH', 'ANDSYM',
        'ISIN', 'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN',
        'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY', 'ISODD',
        'ISNOTODD', 'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF',
        'QMARK', 'NOT', 'TYPECAST', 'HEX',
        'DOT', 'SINGLEQUOTESTRING', 'CONSTANT', 'DOUBLECOLON',
        'NAMESPACE', 'AT', 'HATCH', 'OPENB',
        'CLOSEB', 'EQUALS', 'NOTEQUALS', 'GREATERTHAN',
        'LESSTHAN', 'GREATEREQUAL', 'LESSEQUAL', 'IDENTITY',
        'NONEIDENTITY', 'MOD', 'LAND', 'LOR',
        'LXOR', 'QUOTE', 'BACKTICK', 'DOLLARID',
        'error', 'start', 'template', 'template_element',
        'smartytag', 'literal', 'literal_elements', 'literal_element',
        'value', 'modifierlist', 'attributes', 'expr',
        'varindexed', 'statement', 'statements', 'optspace',
        'varvar', 'foraction', 'modparameters', 'attribute',
        'ternary', 'array', 'ifcond', 'lop',
        'variable', 'ns1', 'function', 'doublequoted_with_quotes',
        'static_class_access', 'object', 'arrayindex', 'indexdef',
        'varvarele', 'objectchain', 'objectelement', 'method',
        'params', 'modifier', 'modparameter', 'arrayelements',
        'arrayelement', 'doublequoted', 'doublequotedcontent',
    );

    public static $yyRuleName = array(
        /*   0 */
        "start ::= template",
        /*   1 */
        "template ::= template_element",
        /*   2 */
        "template ::= template template_element",
        /*   3 */
        "template ::=",
        /*   4 */
        "template_element ::= smartytag RDEL",
        /*   5 */
        "template_element ::= COMMENT",
        /*   6 */
        "template_element ::= literal",
        /*   7 */
        "template_element ::= PHPSTARTTAG",
        /*   8 */
        "template_element ::= PHPENDTAG",
        /*   9 */
        "template_element ::= PHPENDSCRIPT",
        /*  10 */
        "template_element ::= ASPSTARTTAG",
        /*  11 */
        "template_element ::= ASPENDTAG",
        /*  12 */
        "template_element ::= XMLTAG",
        /*  13 */
        "template_element ::= TEXT",
        /*  14 */
        "template_element ::= STRIPON",
        /*  15 */
        "template_element ::= STRIPOFF",
        /*  16 */
        "template_element ::= BLOCKSOURCE",
        /*  17 */
        "literal ::= LITERALSTART LITERALEND",
        /*  18 */
        "literal ::= LITERALSTART literal_elements LITERALEND",
        /*  19 */
        "literal_elements ::= literal_elements literal_element",
        /*  20 */
        "literal_elements ::=",
        /*  21 */
        "literal_element ::= literal",
        /*  22 */
        "literal_element ::= LITERAL",
        /*  23 */
        "smartytag ::= LDEL value",
        /*  24 */
        "smartytag ::= LDEL value modifierlist attributes",
        /*  25 */
        "smartytag ::= LDEL value attributes",
        /*  26 */
        "smartytag ::= LDEL expr modifierlist attributes",
        /*  27 */
        "smartytag ::= LDEL expr attributes",
        /*  28 */
        "smartytag ::= LDEL DOLLAR ID EQUAL value",
        /*  29 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr",
        /*  30 */
        "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
        /*  31 */
        "smartytag ::= LDEL varindexed EQUAL expr attributes",
        /*  32 */
        "smartytag ::= LDEL ID attributes",
        /*  33 */
        "smartytag ::= LDEL ID",
        /*  34 */
        "smartytag ::= LDEL ID PTR ID attributes",
        /*  35 */
        "smartytag ::= LDEL ID modifierlist attributes",
        /*  36 */
        "smartytag ::= LDEL ID PTR ID modifierlist attributes",
        /*  37 */
        "smartytag ::= LDELIF expr",
        /*  38 */
        "smartytag ::= LDELIF expr attributes",
        /*  39 */
        "smartytag ::= LDELIF statement",
        /*  40 */
        "smartytag ::= LDELIF statement attributes",
        /*  41 */
        "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
        /*  42 */
        "foraction ::= EQUAL expr",
        /*  43 */
        "foraction ::= INCDEC",
        /*  44 */
        "smartytag ::= LDELFOR statement TO expr attributes",
        /*  45 */
        "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
        /*  46 */
        "smartytag ::= LDELFOREACH attributes",
        /*  47 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
        /*  48 */
        "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
        /*  49 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
        /*  50 */
        "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
        /*  51 */
        "smartytag ::= LDELSETFILTER ID modparameters",
        /*  52 */
        "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
        /*  53 */
        "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
        /*  54 */
        "smartytag ::= LDELSLASH ID",
        /*  55 */
        "smartytag ::= LDELSLASH ID modifierlist",
        /*  56 */
        "smartytag ::= LDELSLASH ID PTR ID",
        /*  57 */
        "smartytag ::= LDELSLASH ID PTR ID modifierlist",
        /*  58 */
        "attributes ::= attributes attribute",
        /*  59 */
        "attributes ::= attribute",
        /*  60 */
        "attributes ::=",
        /*  61 */
        "attribute ::= SPACE ID EQUAL ID",
        /*  62 */
        "attribute ::= ATTR expr",
        /*  63 */
        "attribute ::= ATTR value",
        /*  64 */
        "attribute ::= SPACE ID",
        /*  65 */
        "attribute ::= SPACE expr",
        /*  66 */
        "attribute ::= SPACE value",
        /*  67 */
        "attribute ::= SPACE INTEGER EQUAL expr",
        /*  68 */
        "statements ::= statement",
        /*  69 */
        "statements ::= statements COMMA statement",
        /*  70 */
        "statement ::= DOLLAR varvar EQUAL expr",
        /*  71 */
        "statement ::= varindexed EQUAL expr",
        /*  72 */
        "statement ::= OPENP statement CLOSEP",
        /*  73 */
        "expr ::= value",
        /*  74 */
        "expr ::= ternary",
        /*  75 */
        "expr ::= DOLLAR ID COLON ID",
        /*  76 */
        "expr ::= expr MATH value",
        /*  77 */
        "expr ::= expr UNIMATH value",
        /*  78 */
        "expr ::= expr ANDSYM value",
        /*  79 */
        "expr ::= array",
        /*  80 */
        "expr ::= expr modifierlist",
        /*  81 */
        "expr ::= expr ifcond expr",
        /*  82 */
        "expr ::= expr ISIN array",
        /*  83 */
        "expr ::= expr ISIN value",
        /*  84 */
        "expr ::= expr lop expr",
        /*  85 */
        "expr ::= expr ISDIVBY expr",
        /*  86 */
        "expr ::= expr ISNOTDIVBY expr",
        /*  87 */
        "expr ::= expr ISEVEN",
        /*  88 */
        "expr ::= expr ISNOTEVEN",
        /*  89 */
        "expr ::= expr ISEVENBY expr",
        /*  90 */
        "expr ::= expr ISNOTEVENBY expr",
        /*  91 */
        "expr ::= expr ISODD",
        /*  92 */
        "expr ::= expr ISNOTODD",
        /*  93 */
        "expr ::= expr ISODDBY expr",
        /*  94 */
        "expr ::= expr ISNOTODDBY expr",
        /*  95 */
        "expr ::= variable INSTANCEOF ns1",
        /*  96 */
        "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
        /*  97 */
        "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
        /*  98 */
        "value ::= variable",
        /*  99 */
        "value ::= UNIMATH value",
        /* 100 */
        "value ::= NOT value",
        /* 101 */
        "value ::= TYPECAST value",
        /* 102 */
        "value ::= variable INCDEC",
        /* 103 */
        "value ::= HEX",
        /* 104 */
        "value ::= INTEGER",
        /* 105 */
        "value ::= INTEGER DOT INTEGER",
        /* 106 */
        "value ::= INTEGER DOT",
        /* 107 */
        "value ::= DOT INTEGER",
        /* 108 */
        "value ::= ID",
        /* 109 */
        "value ::= function",
        /* 110 */
        "value ::= OPENP expr CLOSEP",
        /* 111 */
        "value ::= SINGLEQUOTESTRING",
        /* 112 */
        "value ::= doublequoted_with_quotes",
        /* 113 */
        "value ::= CONSTANT",
        /* 114 */
        "value ::= varindexed DOUBLECOLON static_class_access",
        /* 115 */
        "value ::= smartytag RDEL",
        /* 116 */
        "value ::= value modifierlist",
        /* 117 */
        "value ::= NAMESPACE",
        /* 118 */
        "value ::= ns1 DOUBLECOLON static_class_access",
        /* 119 */
        "ns1 ::= ID",
        /* 120 */
        "ns1 ::= NAMESPACE",
        /* 121 */
        "ns1 ::= variable",
        /* 122 */
        "variable ::= varindexed",
        /* 123 */
        "variable ::= DOLLAR varvar AT ID",
        /* 124 */
        "variable ::= object",
        /* 125 */
        "variable ::= HATCH ID HATCH",
        /* 126 */
        "variable ::= HATCH ID HATCH arrayindex",
        /* 127 */
        "variable ::= HATCH variable HATCH",
        /* 128 */
        "variable ::= HATCH variable HATCH arrayindex",
        /* 129 */
        "varindexed ::= DOLLAR varvar arrayindex",
        /* 130 */
        "arrayindex ::= arrayindex indexdef",
        /* 131 */
        "arrayindex ::=",
        /* 132 */
        "indexdef ::= DOT DOLLAR varvar",
        /* 133 */
        "indexdef ::= DOT DOLLAR varvar AT ID",
        /* 134 */
        "indexdef ::= DOT ID",
        /* 135 */
        "indexdef ::= DOT INTEGER",
        /* 136 */
        "indexdef ::= DOT CONSTANT",
        /* 137 */
        "indexdef ::= DOT LDEL expr RDEL",
        /* 138 */
        "indexdef ::= OPENB ID CLOSEB",
        /* 139 */
        "indexdef ::= OPENB ID DOT ID CLOSEB",
        /* 140 */
        "indexdef ::= OPENB expr CLOSEB",
        /* 141 */
        "indexdef ::= OPENB CLOSEB",
        /* 142 */
        "varvar ::= varvarele",
        /* 143 */
        "varvar ::= varvar varvarele",
        /* 144 */
        "varvarele ::= ID",
        /* 145 */
        "varvarele ::= LDEL expr RDEL",
        /* 146 */
        "object ::= varindexed objectchain",
        /* 147 */
        "objectchain ::= objectelement",
        /* 148 */
        "objectchain ::= objectchain objectelement",
        /* 149 */
        "objectelement ::= PTR ID arrayindex",
        /* 150 */
        "objectelement ::= PTR DOLLAR varvar arrayindex",
        /* 151 */
        "objectelement ::= PTR LDEL expr RDEL arrayindex",
        /* 152 */
        "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
        /* 153 */
        "objectelement ::= PTR method",
        /* 154 */
        "function ::= ns1 OPENP params CLOSEP",
        /* 155 */
        "method ::= ID OPENP params CLOSEP",
        /* 156 */
        "method ::= DOLLAR ID OPENP params CLOSEP",
        /* 157 */
        "params ::= params COMMA expr",
        /* 158 */
        "params ::= expr",
        /* 159 */
        "params ::=",
        /* 160 */
        "modifierlist ::= modifierlist modifier modparameters",
        /* 161 */
        "modifierlist ::= modifier modparameters",
        /* 162 */
        "modifier ::= VERT AT ID",
        /* 163 */
        "modifier ::= VERT ID",
        /* 164 */
        "modparameters ::= modparameters modparameter",
        /* 165 */
        "modparameters ::=",
        /* 166 */
        "modparameter ::= COLON value",
        /* 167 */
        "modparameter ::= COLON array",
        /* 168 */
        "static_class_access ::= method",
        /* 169 */
        "static_class_access ::= method objectchain",
        /* 170 */
        "static_class_access ::= ID",
        /* 171 */
        "static_class_access ::= DOLLAR ID arrayindex",
        /* 172 */
        "static_class_access ::= DOLLAR ID arrayindex objectchain",
        /* 173 */
        "ifcond ::= EQUALS",
        /* 174 */
        "ifcond ::= NOTEQUALS",
        /* 175 */
        "ifcond ::= GREATERTHAN",
        /* 176 */
        "ifcond ::= LESSTHAN",
        /* 177 */
        "ifcond ::= GREATEREQUAL",
        /* 178 */
        "ifcond ::= LESSEQUAL",
        /* 179 */
        "ifcond ::= IDENTITY",
        /* 180 */
        "ifcond ::= NONEIDENTITY",
        /* 181 */
        "ifcond ::= MOD",
        /* 182 */
        "lop ::= LAND",
        /* 183 */
        "lop ::= LOR",
        /* 184 */
        "lop ::= LXOR",
        /* 185 */
        "array ::= OPENB arrayelements CLOSEB",
        /* 186 */
        "arrayelements ::= arrayelement",
        /* 187 */
        "arrayelements ::= arrayelements COMMA arrayelement",
        /* 188 */
        "arrayelements ::=",
        /* 189 */
        "arrayelement ::= value APTR expr",
        /* 190 */
        "arrayelement ::= ID APTR expr",
        /* 191 */
        "arrayelement ::= expr",
        /* 192 */
        "doublequoted_with_quotes ::= QUOTE QUOTE",
        /* 193 */
        "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
        /* 194 */
        "doublequoted ::= doublequoted doublequotedcontent",
        /* 195 */
        "doublequoted ::= doublequotedcontent",
        /* 196 */
        "doublequotedcontent ::= BACKTICK variable BACKTICK",
        /* 197 */
        "doublequotedcontent ::= BACKTICK expr BACKTICK",
        /* 198 */
        "doublequotedcontent ::= DOLLARID",
        /* 199 */
        "doublequotedcontent ::= LDEL variable RDEL",
        /* 200 */
        "doublequotedcontent ::= LDEL expr RDEL",
        /* 201 */
        "doublequotedcontent ::= smartytag RDEL",
        /* 202 */
        "doublequotedcontent ::= TEXT",
        /* 203 */
        "optspace ::= SPACE",
        /* 204 */
        "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:
                break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                   $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                   "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx --;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                        if (in_array($token,
                                     self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done ++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                        in_array($token, self::$yyExpectedTokens[$nextstate], true)
                    ) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx ++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

    public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                && ($iFallback = self::$yyFallback[$iLookAhead]) != 0
            ) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
            self::$yy_lookahead[$i] != $iLookAhead
        ) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx ++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx --;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            #line 86 "smarty_internal_templateparser.y"

            $this->internalError = true;
            $this->compiler->trigger_template_error("Stack overflow in template parser");
            #line 1752 "smarty_internal_templateparser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                    $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i ++) {
                fprintf($this->yyTraceFILE, " %s",
                        $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE, "\n");
        }
    }

    public static $yyRuleInfo = array(
        array('lhs' => 85, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 1),
        array('lhs' => 86, 'rhs' => 2),
        array('lhs' => 86, 'rhs' => 0),
        array('lhs' => 87, 'rhs' => 2),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 87, 'rhs' => 1),
        array('lhs' => 89, 'rhs' => 2),
        array('lhs' => 89, 'rhs' => 3),
        array('lhs' => 90, 'rhs' => 2),
        array('lhs' => 90, 'rhs' => 0),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 91, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 4),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 4),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 88, 'rhs' => 6),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 88, 'rhs' => 4),
        array('lhs' => 88, 'rhs' => 6),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 11),
        array('lhs' => 101, 'rhs' => 2),
        array('lhs' => 101, 'rhs' => 1),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 88, 'rhs' => 7),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 7),
        array('lhs' => 88, 'rhs' => 10),
        array('lhs' => 88, 'rhs' => 7),
        array('lhs' => 88, 'rhs' => 10),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 4),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 2),
        array('lhs' => 88, 'rhs' => 3),
        array('lhs' => 88, 'rhs' => 4),
        array('lhs' => 88, 'rhs' => 5),
        array('lhs' => 94, 'rhs' => 2),
        array('lhs' => 94, 'rhs' => 1),
        array('lhs' => 94, 'rhs' => 0),
        array('lhs' => 103, 'rhs' => 4),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 2),
        array('lhs' => 103, 'rhs' => 4),
        array('lhs' => 98, 'rhs' => 1),
        array('lhs' => 98, 'rhs' => 3),
        array('lhs' => 97, 'rhs' => 4),
        array('lhs' => 97, 'rhs' => 3),
        array('lhs' => 97, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 1),
        array('lhs' => 95, 'rhs' => 1),
        array('lhs' => 95, 'rhs' => 4),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 1),
        array('lhs' => 95, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 2),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 95, 'rhs' => 3),
        array('lhs' => 104, 'rhs' => 8),
        array('lhs' => 104, 'rhs' => 7),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 2),
        array('lhs' => 92, 'rhs' => 1),
        array('lhs' => 92, 'rhs' => 3),
        array('lhs' => 109, 'rhs' => 1),
        array('lhs' => 109, 'rhs' => 1),
        array('lhs' => 109, 'rhs' => 1),
        array('lhs' => 108, 'rhs' => 1),
        array('lhs' => 108, 'rhs' => 4),
        array('lhs' => 108, 'rhs' => 1),
        array('lhs' => 108, 'rhs' => 3),
        array('lhs' => 108, 'rhs' => 4),
        array('lhs' => 108, 'rhs' => 3),
        array('lhs' => 108, 'rhs' => 4),
        array('lhs' => 96, 'rhs' => 3),
        array('lhs' => 114, 'rhs' => 2),
        array('lhs' => 114, 'rhs' => 0),
        array('lhs' => 115, 'rhs' => 3),
        array('lhs' => 115, 'rhs' => 5),
        array('lhs' => 115, 'rhs' => 2),
        array('lhs' => 115, 'rhs' => 2),
        array('lhs' => 115, 'rhs' => 2),
        array('lhs' => 115, 'rhs' => 4),
        array('lhs' => 115, 'rhs' => 3),
        array('lhs' => 115, 'rhs' => 5),
        array('lhs' => 115, 'rhs' => 3),
        array('lhs' => 115, 'rhs' => 2),
        array('lhs' => 100, 'rhs' => 1),
        array('lhs' => 100, 'rhs' => 2),
        array('lhs' => 116, 'rhs' => 1),
        array('lhs' => 116, 'rhs' => 3),
        array('lhs' => 113, 'rhs' => 2),
        array('lhs' => 117, 'rhs' => 1),
        array('lhs' => 117, 'rhs' => 2),
        array('lhs' => 118, 'rhs' => 3),
        array('lhs' => 118, 'rhs' => 4),
        array('lhs' => 118, 'rhs' => 5),
        array('lhs' => 118, 'rhs' => 6),
        array('lhs' => 118, 'rhs' => 2),
        array('lhs' => 110, 'rhs' => 4),
        array('lhs' => 119, 'rhs' => 4),
        array('lhs' => 119, 'rhs' => 5),
        array('lhs' => 120, 'rhs' => 3),
        array('lhs' => 120, 'rhs' => 1),
        array('lhs' => 120, 'rhs' => 0),
        array('lhs' => 93, 'rhs' => 3),
        array('lhs' => 93, 'rhs' => 2),
        array('lhs' => 121, 'rhs' => 3),
        array('lhs' => 121, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 2),
        array('lhs' => 102, 'rhs' => 0),
        array('lhs' => 122, 'rhs' => 2),
        array('lhs' => 122, 'rhs' => 2),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 2),
        array('lhs' => 112, 'rhs' => 1),
        array('lhs' => 112, 'rhs' => 3),
        array('lhs' => 112, 'rhs' => 4),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 106, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 1),
        array('lhs' => 107, 'rhs' => 1),
        array('lhs' => 105, 'rhs' => 3),
        array('lhs' => 123, 'rhs' => 1),
        array('lhs' => 123, 'rhs' => 3),
        array('lhs' => 123, 'rhs' => 0),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 3),
        array('lhs' => 124, 'rhs' => 1),
        array('lhs' => 111, 'rhs' => 2),
        array('lhs' => 111, 'rhs' => 3),
        array('lhs' => 125, 'rhs' => 2),
        array('lhs' => 125, 'rhs' => 1),
        array('lhs' => 126, 'rhs' => 3),
        array('lhs' => 126, 'rhs' => 3),
        array('lhs' => 126, 'rhs' => 1),
        array('lhs' => 126, 'rhs' => 3),
        array('lhs' => 126, 'rhs' => 3),
        array('lhs' => 126, 'rhs' => 2),
        array('lhs' => 126, 'rhs' => 1),
        array('lhs' => 99, 'rhs' => 1),
        array('lhs' => 99, 'rhs' => 0),
    );

    public static $yyReduceMap = array(
        0   => 0,
        1   => 1,
        2   => 2,
        4   => 4,
        5   => 5,
        6   => 6,
        7   => 7,
        8   => 8,
        9   => 9,
        10  => 10,
        11  => 11,
        12  => 12,
        13  => 13,
        14  => 14,
        15  => 15,
        16  => 16,
        17  => 17,
        20  => 17,
        204 => 17,
        18  => 18,
        72  => 18,
        19  => 19,
        99  => 19,
        101 => 19,
        102 => 19,
        130 => 19,
        169 => 19,
        21  => 21,
        22  => 21,
        43  => 21,
        65  => 21,
        66  => 21,
        73  => 21,
        74  => 21,
        79  => 21,
        98  => 21,
        103 => 21,
        104 => 21,
        109 => 21,
        111 => 21,
        112 => 21,
        113 => 21,
        117 => 21,
        119 => 21,
        120 => 21,
        121 => 21,
        124 => 21,
        142 => 21,
        168 => 21,
        170 => 21,
        186 => 21,
        191 => 21,
        203 => 21,
        23  => 23,
        24  => 24,
        25  => 25,
        27  => 25,
        26  => 26,
        28  => 28,
        29  => 28,
        30  => 30,
        31  => 31,
        32  => 32,
        33  => 33,
        34  => 34,
        35  => 35,
        36  => 36,
        37  => 37,
        38  => 38,
        40  => 38,
        39  => 39,
        41  => 41,
        42  => 42,
        44  => 44,
        45  => 45,
        46  => 46,
        47  => 47,
        49  => 47,
        48  => 48,
        50  => 48,
        51  => 51,
        52  => 52,
        53  => 53,
        54  => 54,
        55  => 55,
        56  => 56,
        57  => 57,
        58  => 58,
        59  => 59,
        68  => 59,
        158 => 59,
        162 => 59,
        166 => 59,
        167 => 59,
        60  => 60,
        159 => 60,
        165 => 60,
        61  => 61,
        62  => 62,
        63  => 62,
        64  => 64,
        67  => 67,
        69  => 69,
        70  => 70,
        71  => 70,
        75  => 75,
        76  => 76,
        77  => 76,
        78  => 76,
        80  => 80,
        116 => 80,
        81  => 81,
        84  => 81,
        82  => 82,
        83  => 83,
        85  => 85,
        86  => 86,
        87  => 87,
        92  => 87,
        88  => 88,
        91  => 88,
        89  => 89,
        94  => 89,
        90  => 90,
        93  => 90,
        95  => 95,
        96  => 96,
        97  => 97,
        100 => 100,
        105 => 105,
        106 => 106,
        107 => 107,
        108 => 108,
        110 => 110,
        114 => 114,
        115 => 115,
        118 => 118,
        122 => 122,
        123 => 123,
        125 => 125,
        126 => 126,
        127 => 127,
        128 => 128,
        129 => 129,
        131 => 131,
        188 => 131,
        132 => 132,
        133 => 133,
        134 => 134,
        136 => 134,
        135 => 135,
        137 => 137,
        140 => 137,
        138 => 138,
        139 => 139,
        141 => 141,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        160 => 160,
        161 => 161,
        163 => 163,
        164 => 164,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        187 => 187,
        189 => 189,
        190 => 190,
        192 => 192,
        193 => 193,
        194 => 194,
        195 => 195,
        196 => 196,
        197 => 196,
        199 => 196,
        198 => 198,
        200 => 200,
        201 => 201,
        202 => 202,
    );

    #line 97 "smarty_internal_templateparser.y"
    function yy_r0()
    {
        $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
    #line 2191 "smarty_internal_templateparser.php"
    #line 105 "smarty_internal_templateparser.y"
    function yy_r1()
    {
        if ($this->yystack[$this->yyidx + 0]->minor != null) {
            $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2198 "smarty_internal_templateparser.php"
    #line 112 "smarty_internal_templateparser.y"
    function yy_r2()
    {
        if ($this->yystack[$this->yyidx + 0]->minor != null) {
            // because of possible code injection
            $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2206 "smarty_internal_templateparser.php"
    #line 126 "smarty_internal_templateparser.y"
    function yy_r4()
    {
        if ($this->compiler->has_code) {
            $tmp = '';
            foreach ($this->compiler->prefix_code as $code) {
                $tmp .= $code;
            }
            $this->compiler->prefix_code = array();
            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp . $this->yystack[$this->yyidx + - 1]->minor, true));
        } else {
            $this->_retvalue = null;
        }
        $this->compiler->has_variable_string = false;
        $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
    #line 2218 "smarty_internal_templateparser.php"
    #line 138 "smarty_internal_templateparser.y"
    function yy_r5()
    {
        $this->_retvalue = null;
    }
    #line 2223 "smarty_internal_templateparser.php"
    #line 143 "smarty_internal_templateparser.y"
    function yy_r6()
    {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2228 "smarty_internal_templateparser.php"
    #line 148 "smarty_internal_templateparser.y"
    function yy_r7()
    {
        if (strpos($this->yystack[$this->yyidx + 0]->minor, '<s') === 0) {
            $this->lex->is_phpScript = true;
        }
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            if ($this->lex->is_phpScript) {
                $s = addcslashes($this->yystack[$this->yyidx + 0]->minor, "'");
                $this->_retvalue = new _smarty_text($this, $s);
            } else {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error(self::Err3);
            }
            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode('<?php ', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }
    #line 2252 "smarty_internal_templateparser.php"
    #line 172 "smarty_internal_templateparser.y"
    function yy_r8()
    {
        if ($this->is_xml) {
            $this->compiler->tag_nocache = true;
            $this->is_xml = false;
            $save = $this->template->has_nocache_code;
            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true));
            $this->template->has_nocache_code = $save;
        } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode('?>', true));
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            $this->_retvalue = null;
        }
    }
    #line 2271 "smarty_internal_templateparser.php"
    #line 190 "smarty_internal_templateparser.y"
    function yy_r9()
    {
        if (!$this->lex->is_phpScript) {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        } else {
            $this->lex->is_phpScript = false;
            if ($this->php_handling == Smarty::PHP_PASSTHRU) {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
                $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
            } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
                $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode('?>', true));
            } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
                $this->_retvalue = null;
            }
        }
    }
    #line 2289 "smarty_internal_templateparser.php"
    #line 208 "smarty_internal_templateparser.y"
    function yy_r10()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                if (!($this->smarty instanceof SmartyBC)) {
                    $this->compiler->trigger_template_error(self::Err3);
                }
                $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode('<%', true));
            } else {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        }
    }
    #line 2313 "smarty_internal_templateparser.php"
    #line 232 "smarty_internal_templateparser.y"
    function yy_r11()
    {
        if ($this->php_handling == Smarty::PHP_PASSTHRU) {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
            $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
        } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
            if ($this->asp_tags) {
                $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode('%>', true));
            } else {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
            if ($this->asp_tags) {
                $this->_retvalue = null;
            } else {
                $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
            }
        }
    }
    #line 2334 "smarty_internal_templateparser.php"
    #line 254 "smarty_internal_templateparser.y"
    function yy_r12()
    {
        $this->compiler->tag_nocache = true;
        $this->is_xml = true;
        $save = $this->template->has_nocache_code;
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true));
        $this->template->has_nocache_code = $save;
    }
    #line 2343 "smarty_internal_templateparser.php"
    #line 263 "smarty_internal_templateparser.y"
    function yy_r13()
    {
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2352 "smarty_internal_templateparser.php"
    #line 272 "smarty_internal_templateparser.y"
    function yy_r14()
    {
        $this->strip = true;
    }
    #line 2357 "smarty_internal_templateparser.php"
    #line 276 "smarty_internal_templateparser.y"
    function yy_r15()
    {
        $this->strip = false;
    }
    #line 2362 "smarty_internal_templateparser.php"
    #line 280 "smarty_internal_templateparser.y"
    function yy_r16()
    {
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
    #line 2371 "smarty_internal_templateparser.php"
    #line 289 "smarty_internal_templateparser.y"
    function yy_r17()
    {
        $this->_retvalue = '';
    }
    #line 2376 "smarty_internal_templateparser.php"
    #line 293 "smarty_internal_templateparser.y"
    function yy_r18()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }
    #line 2381 "smarty_internal_templateparser.php"
    #line 297 "smarty_internal_templateparser.y"
    function yy_r19()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2386 "smarty_internal_templateparser.php"
    #line 305 "smarty_internal_templateparser.y"
    function yy_r21()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2391 "smarty_internal_templateparser.php"
    #line 318 "smarty_internal_templateparser.y"
    function yy_r23()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', array(), array('value' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2396 "smarty_internal_templateparser.php"
    #line 322 "smarty_internal_templateparser.y"
    function yy_r24()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2401 "smarty_internal_templateparser.php"
    #line 326 "smarty_internal_templateparser.y"
    function yy_r25()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2406 "smarty_internal_templateparser.php"
    #line 330 "smarty_internal_templateparser.y"
    function yy_r26()
    {
        $this->_retvalue = $this->compiler->compileTag('private_print_expression', $this->yystack[$this->yyidx + 0]->minor, array('value' => $this->yystack[$this->yyidx + - 2]->minor, 'modifierlist' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2411 "smarty_internal_templateparser.php"
    #line 343 "smarty_internal_templateparser.y"
    function yy_r28()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array(array('value' => $this->yystack[$this->yyidx + 0]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 2]->minor . "'")));
    }
    #line 2416 "smarty_internal_templateparser.php"
    #line 351 "smarty_internal_templateparser.y"
    function yy_r30()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => "'" . $this->yystack[$this->yyidx + - 3]->minor . "'")), $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2421 "smarty_internal_templateparser.php"
    #line 355 "smarty_internal_templateparser.y"
    function yy_r31()
    {
        $this->_retvalue = $this->compiler->compileTag('assign', array_merge(array(array('value' => $this->yystack[$this->yyidx + - 1]->minor), array('var' => $this->yystack[$this->yyidx + - 3]->minor['var'])), $this->yystack[$this->yyidx + 0]->minor), array('smarty_internal_index' => $this->yystack[$this->yyidx + - 3]->minor['smarty_internal_index']));
    }
    #line 2426 "smarty_internal_templateparser.php"
    #line 360 "smarty_internal_templateparser.y"
    function yy_r32()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2431 "smarty_internal_templateparser.php"
    #line 364 "smarty_internal_templateparser.y"
    function yy_r33()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor, array());
    }
    #line 2436 "smarty_internal_templateparser.php"
    #line 369 "smarty_internal_templateparser.y"
    function yy_r34()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2441 "smarty_internal_templateparser.php"
    #line 374 "smarty_internal_templateparser.y"
    function yy_r35()
    {
        $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor, $this->yystack[$this->yyidx + 0]->minor) . '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . ';?>';
    }
    #line 2447 "smarty_internal_templateparser.php"
    #line 380 "smarty_internal_templateparser.y"
    function yy_r36()
    {
        $this->_retvalue = '<?php ob_start();?>' . $this->compiler->compileTag($this->yystack[$this->yyidx + - 4]->minor, $this->yystack[$this->yyidx + 0]->minor, array('object_method' => $this->yystack[$this->yyidx + - 2]->minor)) . '<?php echo ';
        $this->_retvalue .= $this->compiler->compileTag('private_modifier', array(), array('modifierlist' => $this->yystack[$this->yyidx + - 1]->minor, 'value' => 'ob_get_clean()')) . ';?>';
    }
    #line 2453 "smarty_internal_templateparser.php"
    #line 386 "smarty_internal_templateparser.y"
    function yy_r37()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2459 "smarty_internal_templateparser.php"
    #line 391 "smarty_internal_templateparser.y"
    function yy_r38()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 2]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, $this->yystack[$this->yyidx + 0]->minor, array('if condition' => $this->yystack[$this->yyidx + - 1]->minor));
    }
    #line 2465 "smarty_internal_templateparser.php"
    #line 396 "smarty_internal_templateparser.y"
    function yy_r39()
    {
        $tag = trim(substr($this->yystack[$this->yyidx + - 1]->minor, $this->lex->ldel_length));
        $this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag, array(), array('if condition' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2471 "smarty_internal_templateparser.php"
    #line 407 "smarty_internal_templateparser.y"
    function yy_r41()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 9]->minor), array('ifexp' => $this->yystack[$this->yyidx + - 6]->minor), array('var' => $this->yystack[$this->yyidx + - 2]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 1);
    }
    #line 2476 "smarty_internal_templateparser.php"
    #line 411 "smarty_internal_templateparser.y"
    function yy_r42()
    {
        $this->_retvalue = '=' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2481 "smarty_internal_templateparser.php"
    #line 419 "smarty_internal_templateparser.y"
    function yy_r44()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 3]->minor), array('to' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }
    #line 2486 "smarty_internal_templateparser.php"
    #line 423 "smarty_internal_templateparser.y"
    function yy_r45()
    {
        $this->_retvalue = $this->compiler->compileTag('for', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('start' => $this->yystack[$this->yyidx + - 5]->minor), array('to' => $this->yystack[$this->yyidx + - 3]->minor), array('step' => $this->yystack[$this->yyidx + - 1]->minor))), 0);
    }
    #line 2491 "smarty_internal_templateparser.php"
    #line 428 "smarty_internal_templateparser.y"
    function yy_r46()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2496 "smarty_internal_templateparser.php"
    #line 433 "smarty_internal_templateparser.y"
    function yy_r47()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 4]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor))));
    }
    #line 2501 "smarty_internal_templateparser.php"
    #line 437 "smarty_internal_templateparser.y"
    function yy_r48()
    {
        $this->_retvalue = $this->compiler->compileTag('foreach', array_merge($this->yystack[$this->yyidx + 0]->minor, array(array('from' => $this->yystack[$this->yyidx + - 7]->minor), array('item' => $this->yystack[$this->yyidx + - 1]->minor), array('key' => $this->yystack[$this->yyidx + - 4]->minor))));
    }
    #line 2506 "smarty_internal_templateparser.php"
    #line 450 "smarty_internal_templateparser.y"
    function yy_r51()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx + - 1]->minor), $this->yystack[$this->yyidx + 0]->minor))));
    }
    #line 2511 "smarty_internal_templateparser.php"
    #line 454 "smarty_internal_templateparser.y"
    function yy_r52()
    {
        $this->_retvalue = $this->compiler->compileTag('setfilter', array(), array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx + - 2]->minor), $this->yystack[$this->yyidx + - 1]->minor)), $this->yystack[$this->yyidx + 0]->minor)));
    }
    #line 2516 "smarty_internal_templateparser.php"
    #line 459 "smarty_internal_templateparser.y"
    function yy_r53()
    {
        $j = strrpos($this->yystack[$this->yyidx + 0]->minor, '.');
        if ($this->yystack[$this->yyidx + 0]->minor[$j + 1] == 'c') {
            // {$smarty.block.child}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
        } else {
            // {$smarty.block.parent}
            $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
        }
    }
    #line 2528 "smarty_internal_templateparser.php"
    #line 472 "smarty_internal_templateparser.y"
    function yy_r54()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor . 'close', array());
    }
    #line 2533 "smarty_internal_templateparser.php"
    #line 476 "smarty_internal_templateparser.y"
    function yy_r55()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 1]->minor . 'close', array(), array('modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2538 "smarty_internal_templateparser.php"
    #line 481 "smarty_internal_templateparser.y"
    function yy_r56()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 2]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2543 "smarty_internal_templateparser.php"
    #line 485 "smarty_internal_templateparser.y"
    function yy_r57()
    {
        $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + - 3]->minor . 'close', array(), array('object_method' => $this->yystack[$this->yyidx + - 1]->minor, 'modifier_list' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2548 "smarty_internal_templateparser.php"
    #line 493 "smarty_internal_templateparser.y"
    function yy_r58()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
        $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2554 "smarty_internal_templateparser.php"
    #line 499 "smarty_internal_templateparser.y"
    function yy_r59()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2559 "smarty_internal_templateparser.php"
    #line 504 "smarty_internal_templateparser.y"
    function yy_r60()
    {
        $this->_retvalue = array();
    }
    #line 2564 "smarty_internal_templateparser.php"
    #line 509 "smarty_internal_templateparser.y"
    function yy_r61()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'true');
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'false');
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => 'null');
        } else {
            $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => "'" . $this->yystack[$this->yyidx + 0]->minor . "'");
        }
    }
    #line 2577 "smarty_internal_templateparser.php"
    #line 521 "smarty_internal_templateparser.y"
    function yy_r62()
    {
        $this->_retvalue = array(trim($this->yystack[$this->yyidx + - 1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2582 "smarty_internal_templateparser.php"
    #line 529 "smarty_internal_templateparser.y"
    function yy_r64()
    {
        $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
    }
    #line 2587 "smarty_internal_templateparser.php"
    #line 541 "smarty_internal_templateparser.y"
    function yy_r67()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + - 2]->minor => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2592 "smarty_internal_templateparser.php"
    #line 554 "smarty_internal_templateparser.y"
    function yy_r69()
    {
        $this->yystack[$this->yyidx + - 2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor;
    }
    #line 2598 "smarty_internal_templateparser.php"
    #line 559 "smarty_internal_templateparser.y"
    function yy_r70()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 2]->minor, 'value' => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2603 "smarty_internal_templateparser.php"
    #line 587 "smarty_internal_templateparser.y"
    function yy_r75()
    {
        $this->_retvalue = '$_smarty_tpl->getStreamVariable(\'' . $this->yystack[$this->yyidx + - 2]->minor . '://' . $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
    #line 2608 "smarty_internal_templateparser.php"
    #line 592 "smarty_internal_templateparser.y"
    function yy_r76()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . trim($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2613 "smarty_internal_templateparser.php"
    #line 611 "smarty_internal_templateparser.y"
    function yy_r80()
    {
        $this->_retvalue = $this->compiler->compileTag('private_modifier', array(), array('value' => $this->yystack[$this->yyidx + - 1]->minor, 'modifierlist' => $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2618 "smarty_internal_templateparser.php"
    #line 617 "smarty_internal_templateparser.y"
    function yy_r81()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2623 "smarty_internal_templateparser.php"
    #line 621 "smarty_internal_templateparser.y"
    function yy_r82()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2628 "smarty_internal_templateparser.php"
    #line 625 "smarty_internal_templateparser.y"
    function yy_r83()
    {
        $this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + - 2]->minor . ',(array)' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2633 "smarty_internal_templateparser.php"
    #line 633 "smarty_internal_templateparser.y"
    function yy_r85()
    {
        $this->_retvalue = '!(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2638 "smarty_internal_templateparser.php"
    #line 637 "smarty_internal_templateparser.y"
    function yy_r86()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 2]->minor . ' % ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2643 "smarty_internal_templateparser.php"
    #line 641 "smarty_internal_templateparser.y"
    function yy_r87()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2648 "smarty_internal_templateparser.php"
    #line 645 "smarty_internal_templateparser.y"
    function yy_r88()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2653 "smarty_internal_templateparser.php"
    #line 649 "smarty_internal_templateparser.y"
    function yy_r89()
    {
        $this->_retvalue = '!(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2658 "smarty_internal_templateparser.php"
    #line 653 "smarty_internal_templateparser.y"
    function yy_r90()
    {
        $this->_retvalue = '(1 & ' . $this->yystack[$this->yyidx + - 2]->minor . ' / ' . $this->yystack[$this->yyidx + 0]->minor . ')';
    }
    #line 2663 "smarty_internal_templateparser.php"
    #line 673 "smarty_internal_templateparser.y"
    function yy_r95()
    {
        //    self::$prefix_number++;
        //    $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.$this->yystack[$this->yyidx + -2]->minor.';? >';
        //   $this->_retvalue = '$_tmp'.self::$prefix_number.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2671 "smarty_internal_templateparser.php"
    #line 684 "smarty_internal_templateparser.y"
    function yy_r96()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 6]->minor . ' ? ' . $this->compileVariable("'" . $this->yystack[$this->yyidx + - 2]->minor . "'") . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2676 "smarty_internal_templateparser.php"
    #line 688 "smarty_internal_templateparser.y"
    function yy_r97()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 5]->minor . ' ? ' . $this->yystack[$this->yyidx + - 2]->minor . ' : ' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2681 "smarty_internal_templateparser.php"
    #line 703 "smarty_internal_templateparser.y"
    function yy_r100()
    {
        $this->_retvalue = '!' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2686 "smarty_internal_templateparser.php"
    #line 724 "smarty_internal_templateparser.y"
    function yy_r105()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2691 "smarty_internal_templateparser.php"
    #line 728 "smarty_internal_templateparser.y"
    function yy_r106()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.';
    }
    #line 2696 "smarty_internal_templateparser.php"
    #line 732 "smarty_internal_templateparser.y"
    function yy_r107()
    {
        $this->_retvalue = '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2701 "smarty_internal_templateparser.php"
    #line 737 "smarty_internal_templateparser.y"
    function yy_r108()
    {
        if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'true';
        } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'false';
        } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
            $this->_retvalue = 'null';
        } else {
            $this->_retvalue = "'" . $this->yystack[$this->yyidx + 0]->minor . "'";
        }
    }
    #line 2714 "smarty_internal_templateparser.php"
    #line 755 "smarty_internal_templateparser.y"
    function yy_r110()
    {
        $this->_retvalue = "(" . $this->yystack[$this->yyidx + - 1]->minor . ")";
    }
    #line 2719 "smarty_internal_templateparser.php"
    #line 774 "smarty_internal_templateparser.y"
    function yy_r114()
    {
        self::$prefix_number ++;
        if ($this->yystack[$this->yyidx + - 2]->minor['var'] == '\'smarty\'') {
            $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . ' = ' . $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index']) . ';?>';
        } else {
            $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . ' = ' . $this->compileVariable($this->yystack[$this->yyidx + - 2]->minor['var']) . $this->yystack[$this->yyidx + - 2]->minor['smarty_internal_index'] . ';?>';
        }
        $this->_retvalue = '$_tmp' . self::$prefix_number . '::' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2731 "smarty_internal_templateparser.php"
    #line 786 "smarty_internal_templateparser.y"
    function yy_r115()
    {
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php ob_start();?>' . $this->yystack[$this->yyidx + - 1]->minor . '<?php $_tmp' . self::$prefix_number . '=ob_get_clean();?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number;
    }
    #line 2738 "smarty_internal_templateparser.php"
    #line 802 "smarty_internal_templateparser.y"
    function yy_r118()
    {
        if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + - 2]->minor, $this->compiler)) {
            if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor])) {
                $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + - 2]->minor] . '::' . $this->yystack[$this->yyidx + 0]->minor;
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor;
            }
        } else {
            $this->compiler->error("static class '" . $this->yystack[$this->yyidx + - 2]->minor . "' is undefined or not allowed by security setting");
        }
    }
    #line 2751 "smarty_internal_templateparser.php"
    #line 836 "smarty_internal_templateparser.y"
    function yy_r122()
    {
        if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
            $smarty_var = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
            $this->_retvalue = $smarty_var;
        } else {
            // used for array reset,next,prev,end,current 
            $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
            $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) . $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        }
    }
    #line 2764 "smarty_internal_templateparser.php"
    #line 849 "smarty_internal_templateparser.y"
    function yy_r123()
    {
        $this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[$this->yyidx + - 2]->minor . ']->' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2769 "smarty_internal_templateparser.php"
    #line 859 "smarty_internal_templateparser.y"
    function yy_r125()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable(\'' . $this->yystack[$this->yyidx + - 1]->minor . '\')';
    }
    #line 2774 "smarty_internal_templateparser.php"
    #line 863 "smarty_internal_templateparser.y"
    function yy_r126()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(\'' . $this->yystack[$this->yyidx + - 2]->minor . '\')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' :null)';
    }
    #line 2779 "smarty_internal_templateparser.php"
    #line 867 "smarty_internal_templateparser.y"
    function yy_r127()
    {
        $this->_retvalue = '$_smarty_tpl->getConfigVariable(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2784 "smarty_internal_templateparser.php"
    #line 871 "smarty_internal_templateparser.y"
    function yy_r128()
    {
        $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(' . $this->yystack[$this->yyidx + - 2]->minor . ')) ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' : null)';
    }
    #line 2789 "smarty_internal_templateparser.php"
    #line 875 "smarty_internal_templateparser.y"
    function yy_r129()
    {
        $this->_retvalue = array('var' => $this->yystack[$this->yyidx + - 1]->minor, 'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2794 "smarty_internal_templateparser.php"
    #line 888 "smarty_internal_templateparser.y"
    function yy_r131()
    {
        return;
    }
    #line 2799 "smarty_internal_templateparser.php"
    #line 894 "smarty_internal_templateparser.y"
    function yy_r132()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
    }
    #line 2804 "smarty_internal_templateparser.php"
    #line 898 "smarty_internal_templateparser.y"
    function yy_r133()
    {
        $this->_retvalue = '[' . $this->compileVariable($this->yystack[$this->yyidx + - 2]->minor) . '->' . $this->yystack[$this->yyidx + 0]->minor . ']';
    }
    #line 2809 "smarty_internal_templateparser.php"
    #line 902 "smarty_internal_templateparser.y"
    function yy_r134()
    {
        $this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
    }
    #line 2814 "smarty_internal_templateparser.php"
    #line 906 "smarty_internal_templateparser.y"
    function yy_r135()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + 0]->minor . "]";
    }
    #line 2819 "smarty_internal_templateparser.php"
    #line 915 "smarty_internal_templateparser.y"
    function yy_r137()
    {
        $this->_retvalue = "[" . $this->yystack[$this->yyidx + - 1]->minor . "]";
    }
    #line 2824 "smarty_internal_templateparser.php"
    #line 920 "smarty_internal_templateparser.y"
    function yy_r138()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\'][\'index\']') . ']';
    }
    #line 2829 "smarty_internal_templateparser.php"
    #line 924 "smarty_internal_templateparser.y"
    function yy_r139()
    {
        $this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable', array(), '[\'section\'][\'' . $this->yystack[$this->yyidx + - 3]->minor . '\'][\'' . $this->yystack[$this->yyidx + - 1]->minor . '\']') . ']';
    }
    #line 2834 "smarty_internal_templateparser.php"
    #line 934 "smarty_internal_templateparser.y"
    function yy_r141()
    {
        $this->_retvalue = '[]';
    }
    #line 2839 "smarty_internal_templateparser.php"
    #line 948 "smarty_internal_templateparser.y"
    function yy_r143()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2844 "smarty_internal_templateparser.php"
    #line 953 "smarty_internal_templateparser.y"
    function yy_r144()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
    }
    #line 2849 "smarty_internal_templateparser.php"
    #line 958 "smarty_internal_templateparser.y"
    function yy_r145()
    {
        $this->_retvalue = '(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 2854 "smarty_internal_templateparser.php"
    #line 965 "smarty_internal_templateparser.y"
    function yy_r146()
    {
        if ($this->yystack[$this->yyidx + - 1]->minor['var'] == '\'smarty\'') {
            $this->_retvalue = $this->compiler->compileTag('private_special_variable', array(), $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index']) . $this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + - 1]->minor['var']) . $this->yystack[$this->yyidx + - 1]->minor['smarty_internal_index'] . $this->yystack[$this->yyidx + 0]->minor;
        }
    }
    #line 2863 "smarty_internal_templateparser.php"
    #line 974 "smarty_internal_templateparser.y"
    function yy_r147()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2868 "smarty_internal_templateparser.php"
    #line 979 "smarty_internal_templateparser.y"
    function yy_r148()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2873 "smarty_internal_templateparser.php"
    #line 984 "smarty_internal_templateparser.y"
    function yy_r149()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 1]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2881 "smarty_internal_templateparser.php"
    #line 991 "smarty_internal_templateparser.y"
    function yy_r150()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->compileVariable($this->yystack[$this->yyidx + - 1]->minor) . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2889 "smarty_internal_templateparser.php"
    #line 998 "smarty_internal_templateparser.y"
    function yy_r151()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2897 "smarty_internal_templateparser.php"
    #line 1005 "smarty_internal_templateparser.y"
    function yy_r152()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        $this->_retvalue = '->{\'' . $this->yystack[$this->yyidx + - 4]->minor . '\'.' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
    }
    #line 2905 "smarty_internal_templateparser.php"
    #line 1013 "smarty_internal_templateparser.y"
    function yy_r153()
    {
        $this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2910 "smarty_internal_templateparser.php"
    #line 1021 "smarty_internal_templateparser.y"
    function yy_r154()
    {
        if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + - 3]->minor, $this->compiler)) {
            if (strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + - 3]->minor, 'array') === 0 || is_callable($this->yystack[$this->yyidx + - 3]->minor)) {
                $func_name = strtolower($this->yystack[$this->yyidx + - 3]->minor);
                if ($func_name == 'isset') {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) == 0) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "isset()"');
                    }
                    $par = implode(',', $this->yystack[$this->yyidx + - 1]->minor);
                    if (strncasecmp($par, '$_smarty_tpl->getConfigVariable', strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                        self::$prefix_number ++;
                        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . str_replace(')', ', false)', $par) . ';?>';
                        $isset_par = '$_tmp' . self::$prefix_number;
                    } else {
                        $isset_par = str_replace("')->value", "',null,true,false)->value", $par);
                    }
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . $isset_par . ")";
                } elseif (in_array($func_name, array('empty', 'reset', 'current', 'end', 'prev', 'next'))) {
                    if (count($this->yystack[$this->yyidx + - 1]->minor) != 1) {
                        $this->compiler->trigger_template_error('Illegal number of paramer in "empty()"');
                    }
                    if ($func_name == 'empty') {
                        $this->_retvalue = $func_name . '(' . str_replace("')->value", "',null,true,false)->value", $this->yystack[$this->yyidx + - 1]->minor[0]) . ')';
                    } else {
                        $this->_retvalue = $func_name . '(' . $this->yystack[$this->yyidx + - 1]->minor[0] . ')';
                    }
                } else {
                    $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
                }
            } else {
                $this->compiler->trigger_template_error("unknown function \"" . $this->yystack[$this->yyidx + - 3]->minor . "\"");
            }
        }
    }
    #line 2946 "smarty_internal_templateparser.php"
    #line 1060 "smarty_internal_templateparser.y"
    function yy_r155()
    {
        if ($this->security && substr($this->yystack[$this->yyidx + - 3]->minor, 0, 1) == '_') {
            $this->compiler->trigger_template_error(self::Err1);
        }
        $this->_retvalue = $this->yystack[$this->yyidx + - 3]->minor . "(" . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ")";
    }
    #line 2954 "smarty_internal_templateparser.php"
    #line 1067 "smarty_internal_templateparser.y"
    function yy_r156()
    {
        if ($this->security) {
            $this->compiler->trigger_template_error(self::Err2);
        }
        self::$prefix_number ++;
        $this->compiler->prefix_code[] = '<?php $_tmp' . self::$prefix_number . '=' . $this->compileVariable("'" . $this->yystack[$this->yyidx + - 3]->minor . "'") . ';?>';
        $this->_retvalue = '$_tmp' . self::$prefix_number . '(' . implode(',', $this->yystack[$this->yyidx + - 1]->minor) . ')';
    }
    #line 2964 "smarty_internal_templateparser.php"
    #line 1078 "smarty_internal_templateparser.y"
    function yy_r157()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2969 "smarty_internal_templateparser.php"
    #line 1095 "smarty_internal_templateparser.y"
    function yy_r160()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 2]->minor, array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor)));
    }
    #line 2974 "smarty_internal_templateparser.php"
    #line 1099 "smarty_internal_templateparser.y"
    function yy_r161()
    {
        $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor));
    }
    #line 2979 "smarty_internal_templateparser.php"
    #line 1107 "smarty_internal_templateparser.y"
    function yy_r163()
    {
        $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2984 "smarty_internal_templateparser.php"
    #line 1115 "smarty_internal_templateparser.y"
    function yy_r164()
    {
        $this->_retvalue = array_merge($this->yystack[$this->yyidx + - 1]->minor, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 2989 "smarty_internal_templateparser.php"
    #line 1149 "smarty_internal_templateparser.y"
    function yy_r171()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2994 "smarty_internal_templateparser.php"
    #line 1154 "smarty_internal_templateparser.y"
    function yy_r172()
    {
        $this->_retvalue = '$' . $this->yystack[$this->yyidx + - 2]->minor . $this->yystack[$this->yyidx + - 1]->minor . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 2999 "smarty_internal_templateparser.php"
    #line 1160 "smarty_internal_templateparser.y"
    function yy_r173()
    {
        $this->_retvalue = '==';
    }
    #line 3004 "smarty_internal_templateparser.php"
    #line 1164 "smarty_internal_templateparser.y"
    function yy_r174()
    {
        $this->_retvalue = '!=';
    }
    #line 3009 "smarty_internal_templateparser.php"
    #line 1168 "smarty_internal_templateparser.y"
    function yy_r175()
    {
        $this->_retvalue = '>';
    }
    #line 3014 "smarty_internal_templateparser.php"
    #line 1172 "smarty_internal_templateparser.y"
    function yy_r176()
    {
        $this->_retvalue = '<';
    }
    #line 3019 "smarty_internal_templateparser.php"
    #line 1176 "smarty_internal_templateparser.y"
    function yy_r177()
    {
        $this->_retvalue = '>=';
    }
    #line 3024 "smarty_internal_templateparser.php"
    #line 1180 "smarty_internal_templateparser.y"
    function yy_r178()
    {
        $this->_retvalue = '<=';
    }
    #line 3029 "smarty_internal_templateparser.php"
    #line 1184 "smarty_internal_templateparser.y"
    function yy_r179()
    {
        $this->_retvalue = '===';
    }
    #line 3034 "smarty_internal_templateparser.php"
    #line 1188 "smarty_internal_templateparser.y"
    function yy_r180()
    {
        $this->_retvalue = '!==';
    }
    #line 3039 "smarty_internal_templateparser.php"
    #line 1192 "smarty_internal_templateparser.y"
    function yy_r181()
    {
        $this->_retvalue = '%';
    }
    #line 3044 "smarty_internal_templateparser.php"
    #line 1196 "smarty_internal_templateparser.y"
    function yy_r182()
    {
        $this->_retvalue = '&&';
    }
    #line 3049 "smarty_internal_templateparser.php"
    #line 1200 "smarty_internal_templateparser.y"
    function yy_r183()
    {
        $this->_retvalue = '||';
    }
    #line 3054 "smarty_internal_templateparser.php"
    #line 1204 "smarty_internal_templateparser.y"
    function yy_r184()
    {
        $this->_retvalue = ' XOR ';
    }
    #line 3059 "smarty_internal_templateparser.php"
    #line 1211 "smarty_internal_templateparser.y"
    function yy_r185()
    {
        $this->_retvalue = 'array(' . $this->yystack[$this->yyidx + - 1]->minor . ')';
    }
    #line 3064 "smarty_internal_templateparser.php"
    #line 1219 "smarty_internal_templateparser.y"
    function yy_r187()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3069 "smarty_internal_templateparser.php"
    #line 1227 "smarty_internal_templateparser.y"
    function yy_r189()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3074 "smarty_internal_templateparser.php"
    #line 1231 "smarty_internal_templateparser.y"
    function yy_r190()
    {
        $this->_retvalue = '\'' . $this->yystack[$this->yyidx + - 2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
    }
    #line 3079 "smarty_internal_templateparser.php"
    #line 1243 "smarty_internal_templateparser.y"
    function yy_r192()
    {
        $this->_retvalue = "''";
    }
    #line 3084 "smarty_internal_templateparser.php"
    #line 1247 "smarty_internal_templateparser.y"
    function yy_r193()
    {
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor->to_smarty_php();
    }
    #line 3089 "smarty_internal_templateparser.php"
    #line 1252 "smarty_internal_templateparser.y"
    function yy_r194()
    {
        $this->yystack[$this->yyidx + - 1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
        $this->_retvalue = $this->yystack[$this->yyidx + - 1]->minor;
    }
    #line 3095 "smarty_internal_templateparser.php"
    #line 1257 "smarty_internal_templateparser.y"
    function yy_r195()
    {
        $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    #line 3100 "smarty_internal_templateparser.php"
    #line 1261 "smarty_internal_templateparser.y"
    function yy_r196()
    {
        $this->_retvalue = new _smarty_code($this, '(string)' . $this->yystack[$this->yyidx + - 1]->minor);
    }
    #line 3105 "smarty_internal_templateparser.php"
    #line 1269 "smarty_internal_templateparser.y"
    function yy_r198()
    {
        $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars[\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\']->value');
    }
    #line 3110 "smarty_internal_templateparser.php"
    #line 1277 "smarty_internal_templateparser.y"
    function yy_r200()
    {
        $this->_retvalue = new _smarty_code($this, '(string)(' . $this->yystack[$this->yyidx + - 1]->minor . ')');
    }
    #line 3115 "smarty_internal_templateparser.php"
    #line 1281 "smarty_internal_templateparser.y"
    function yy_r201()
    {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + - 1]->minor);
    }
    #line 3120 "smarty_internal_templateparser.php"
    #line 1285 "smarty_internal_templateparser.y"
    function yy_r202()
    {
        $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }

    #line 3125 "smarty_internal_templateparser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if ($this->yyTraceFILE && $yyruleno >= 0
            && $yyruleno < count(self::$yyRuleName)
        ) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                    $this->yyTracePrompt, $yyruleno,
                    self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i --) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx ++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
        #line 79 "smarty_internal_templateparser.y"

        $this->internalError = true;
        $this->yymajor = $yymajor;
        $this->compiler->trigger_template_error();
        #line 3187 "smarty_internal_templateparser.php"
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
        #line 70 "smarty_internal_templateparser.y"

        $this->successful = !$this->internalError;
        $this->internalError = false;
        $this->retvalue = $this->_retvalue;
        //echo $this->retvalue."\n\n";

        #line 3205 "smarty_internal_templateparser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = - 1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor == 0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt --;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                            $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                    $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                            $yymx != self::YYERRORSYMBOL &&
                            ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor == 0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
